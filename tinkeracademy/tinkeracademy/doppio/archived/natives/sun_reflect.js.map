{"version":3,"sources":["../../../../../../../../var/folders/xp/frk6wp291hjdv4d4bryr39c40000gp/T/doppio-temp39793/tmp_release/src/natives/sun_reflect.js"],"names":["getCallerClass","thread","framesToSkip","caller","getStackTrace","idx","length","frame","method","fullSignature","indexOf","cls","getClassObject","Doppio","require","util","VM","Util","ThreadStatus","Enums","assert","Debug","Assert","sun_reflect_ConstantPool","javaThis","cp","throwNewException","arg1","get","value","initString","getBsCl","sun_reflect_NativeConstructorAccessorImpl","m","params","slot","setStatus","ASYNC_WAITING","$cls","initialize","getMethodFromSlot","obj","getConstructor","cb","e","initializeClass","cdata","wrappedE","throwException","asyncReturn","signature","array","sun_reflect_NativeMethodAccessorImpl","mObj","retType","args","rv","is_primitive_type","returnType","createWrapperObject","unboxArguments","parameterTypes","accessFlags","isStatic","sun_reflect_Reflection","classObj","getRawByte","registerNatives","sun/reflect/ConstantPool","sun/reflect/NativeConstructorAccessorImpl","sun/reflect/NativeMethodAccessorImpl","sun/reflect/Reflection"],"mappings":"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","file":"sun_reflect.js","sourcesContent":["var Doppio = require('../doppiojvm');\nvar util = Doppio.VM.Util;\nvar ThreadStatus = Doppio.VM.Enums.ThreadStatus;\nvar assert = Doppio.Debug.Assert;\nvar sun_reflect_ConstantPool = function () {\n    function sun_reflect_ConstantPool() {\n    }\n    sun_reflect_ConstantPool['getSize0(Ljava/lang/Object;)I'] = function (thread, javaThis, cp) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_reflect_ConstantPool['getClassAt0(Ljava/lang/Object;I)Ljava/lang/Class;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getClassAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/Class;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getMethodAt0(Ljava/lang/Object;I)Ljava/lang/reflect/Member;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getMethodAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/reflect/Member;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getFieldAt0(Ljava/lang/Object;I)Ljava/lang/reflect/Field;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getFieldAtIfLoaded0(Ljava/lang/Object;I)Ljava/lang/reflect/Field;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getMemberRefInfoAt0(Ljava/lang/Object;I)[Ljava/lang/String;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getIntAt0(Ljava/lang/Object;I)I'] = function (thread, javaThis, cp, idx) {\n        return cp.get(idx).value;\n    };\n    sun_reflect_ConstantPool['getLongAt0(Ljava/lang/Object;I)J'] = function (thread, javaThis, cp, idx) {\n        return cp.get(idx).value;\n    };\n    sun_reflect_ConstantPool['getFloatAt0(Ljava/lang/Object;I)F'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_reflect_ConstantPool['getDoubleAt0(Ljava/lang/Object;I)D'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_reflect_ConstantPool['getStringAt0(Ljava/lang/Object;I)Ljava/lang/String;'] = function (thread, javaThis, cp, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_reflect_ConstantPool['getUTF8At0(Ljava/lang/Object;I)Ljava/lang/String;'] = function (thread, javaThis, cp, idx) {\n        return util.initString(thread.getBsCl(), cp.get(idx).value);\n    };\n    return sun_reflect_ConstantPool;\n}();\nvar sun_reflect_NativeConstructorAccessorImpl = function () {\n    function sun_reflect_NativeConstructorAccessorImpl() {\n    }\n    sun_reflect_NativeConstructorAccessorImpl['newInstance0(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, m, params) {\n        var cls = m['java/lang/reflect/Constructor/clazz'], slot = m['java/lang/reflect/Constructor/slot'];\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        cls.$cls.initialize(thread, function (cls) {\n            if (cls !== null) {\n                var method = cls.getMethodFromSlot(slot), obj = new (cls.getConstructor(thread))(thread), i, cb = function (e) {\n                        if (e) {\n                            thread.getBsCl().initializeClass(thread, 'Ljava/lang/reflect/InvocationTargetException;', function (cdata) {\n                                if (cdata !== null) {\n                                    var wrappedE = new (cdata.getConstructor(thread))(thread);\n                                    wrappedE['<init>(Ljava/lang/Throwable;)V'](thread, [e], function (e) {\n                                        thread.throwException(e ? e : wrappedE);\n                                    });\n                                }\n                            });\n                        } else {\n                            thread.asyncReturn(obj);\n                        }\n                    };\n                ;\n                obj[method.signature](thread, params ? params.array : null, cb);\n            }\n        }, true);\n    };\n    return sun_reflect_NativeConstructorAccessorImpl;\n}();\nvar sun_reflect_NativeMethodAccessorImpl = function () {\n    function sun_reflect_NativeMethodAccessorImpl() {\n    }\n    sun_reflect_NativeMethodAccessorImpl['invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, mObj, obj, params) {\n        var cls = mObj['java/lang/reflect/Method/clazz'].$cls, slot = mObj['java/lang/reflect/Method/slot'], retType = mObj['java/lang/reflect/Method/returnType'], m = cls.getMethodFromSlot(slot), args = [], cb = function (e, rv) {\n                if (e) {\n                    thread.getBsCl().initializeClass(thread, 'Ljava/lang/reflect/InvocationTargetException;', function (cdata) {\n                        if (cdata !== null) {\n                            var wrappedE = new (cdata.getConstructor(thread))(thread);\n                            wrappedE['<init>(Ljava/lang/Throwable;)V'](thread, [e], function (e) {\n                                thread.throwException(e ? e : wrappedE);\n                            });\n                        }\n                    });\n                } else {\n                    if (util.is_primitive_type(m.returnType)) {\n                        if (m.returnType === 'V') {\n                            thread.asyncReturn(null);\n                        } else {\n                            thread.asyncReturn(retType.$cls.createWrapperObject(thread, rv));\n                        }\n                    } else {\n                        thread.asyncReturn(rv);\n                    }\n                }\n            };\n        if (params !== null) {\n            args = util.unboxArguments(thread, m.parameterTypes, params.array);\n        }\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        if (m.accessFlags.isStatic()) {\n            cls.getConstructor(thread)[m.fullSignature](thread, args, cb);\n        } else {\n            obj[m.signature](thread, args, cb);\n        }\n    };\n    return sun_reflect_NativeMethodAccessorImpl;\n}();\nfunction getCallerClass(thread, framesToSkip) {\n    var caller = thread.getStackTrace(), idx = caller.length - 1 - framesToSkip, frame = caller[idx];\n    while (frame.method.fullSignature.indexOf('java/lang/reflect/Method/invoke') === 0) {\n        if (idx === 0) {\n            return null;\n        }\n        frame = caller[--idx];\n    }\n    return frame.method.cls.getClassObject(thread);\n}\nvar sun_reflect_Reflection = function () {\n    function sun_reflect_Reflection() {\n    }\n    sun_reflect_Reflection['getCallerClass()Ljava/lang/Class;'] = function (thread) {\n        return getCallerClass(thread, 2);\n    };\n    sun_reflect_Reflection['getClassAccessFlags(Ljava/lang/Class;)I'] = function (thread, classObj) {\n        return classObj.$cls.accessFlags.getRawByte();\n    };\n    sun_reflect_Reflection['getCallerClass(I)Ljava/lang/Class;'] = getCallerClass;\n    return sun_reflect_Reflection;\n}();\nregisterNatives({\n    'sun/reflect/ConstantPool': sun_reflect_ConstantPool,\n    'sun/reflect/NativeConstructorAccessorImpl': sun_reflect_NativeConstructorAccessorImpl,\n    'sun/reflect/NativeMethodAccessorImpl': sun_reflect_NativeMethodAccessorImpl,\n    'sun/reflect/Reflection': sun_reflect_Reflection\n});\n//# sourceMappingURL=sun_reflect.js.map"]}
{"version":3,"sources":["../../../../../../../../tmp/doppio-temp27519/tmp_release/src/natives/java_util.js"],"names":["OpenItem","item","map","id","NextId","GetItem","thread","errMsg","throwNewException","CloseItem","OpenZipFile","zfile","ZipFiles","CloseZipFile","GetZipFile","OpenZipEntry","zentry","ZipEntries","CloseZipEntry","GetZipEntry","OpenZStream","inflaterState","ZStreams","CloseZStream","GetZStream","isUint8Array","arr","Uint8Array","isInt8Array","Int8Array","i82u8","start","len","buffer","byteOffset","Array","isArray","i8arr","length","set","slice","rv","i","TypeError","u82i8","u8arr","buff2i8","buff","arrayish","BFSUtils","buffer2Arrayish","DoppioJVM","require","util","VM","Util","Long","AbstractClasspathJar","ClassFile","BrowserFS","path","fs","ThreadStatus","Enums","inflate","crc32","adler32","ZStreamCons","BFSRequire","MAX_WBITS","CanUseCopyFastPath","b","Buffer","readInt8","java_util_concurrent_atomic_AtomicLong","java_util_jar_JarFile","javaThis","zip","toNumber","existsSync","explorePath","bsCl","getBsCl","foundFiles","initString","p","pop","dirListing","readdirSync","newP","statSync","isDirectory","push","newArrayFromData","java_util_logging_FileHandler","java_util_TimeZone","arg0","offset","Date","getTimezoneOffset","getJVM","internString","java_util_zip_Adler32","adler","byte","off","array","addr","heap","getHeap","get_buffer","java_util_zip_CRC32","crc","java_util_zip_Deflater","arg1","arg2","arg3","arg4","java_util_zip_Inflater","nowrap","strm","ret","inflateInit2","num","fromNumber","msg","thisBuf","thisOff","thisLen","inBuf","outBuf","input","next_in","avail_in","output","next_out","avail_out","lenRead","result","addrNum","newStrm","state","wrap","inflateEnd","java_util_zip_ZipFile","jzfile","nameBytes","addSlash","zipfs","name_1","toString","resolve","getCentralDirectoryEntry","e","ZERO","jzentry","index","getCentralDirectoryEntryAt","nameObj","mode","modified","usemmap","name","cpath","getClassPathItems","cpathItem","getPath","getFS","setStatus","ASYNC_WAITING","readFile","err","data","message","asyncReturn","FileSystem","ZipFS","getNumberOfCentralDirectoryEntries","pos","zipentry","posNum","getRawData","b_1","copy","rawLastModFileTime","compressedSize","uncompressedSize","compressionMethod","flag","zipfile","eocd","getEndOfCentralDirectory","comment","rawCdZipComment","newArrayFromDataWithClass","getInitializedClass","type","rawFileComment","extraField","rawFileName","registerNatives","java/util/concurrent/atomic/AtomicLong","java/util/jar/JarFile","java/util/logging/FileHandler","java/util/TimeZone","java/util/zip/Adler32","java/util/zip/CRC32","java/util/zip/Deflater","java/util/zip/Inflater","java/util/zip/ZipFile"],"mappings":"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","file":"java_util.js","sourcesContent":["var DoppioJVM = require('../doppiojvm');\nvar util = DoppioJVM.VM.Util;\nvar Long = DoppioJVM.VM.Long;\nvar AbstractClasspathJar = DoppioJVM.VM.ClassFile.AbstractClasspathJar;\nvar BrowserFS = require('browserfs');\nvar path = require('path');\nvar fs = require('fs');\nvar ThreadStatus = DoppioJVM.VM.Enums.ThreadStatus;\nvar inflate = require('pako/lib/zlib/inflate');\nvar crc32 = require('pako/lib/zlib/crc32');\nvar adler32 = require('pako/lib/zlib/adler32');\nvar ZStreamCons = require('pako/lib/zlib/zstream');\nvar BFSUtils = BrowserFS.BFSRequire('bfs_utils');\nvar MAX_WBITS = 15;\nvar ZipFiles = {};\nvar ZipEntries = {};\nvar ZStreams = {};\nvar NextId = 1;\nfunction OpenItem(item, map) {\n    var id = NextId++;\n    map[id] = item;\n    return id;\n}\nfunction GetItem(thread, id, map, errMsg) {\n    var item = map[id];\n    if (!item) {\n        thread.throwNewException('Ljava/lang/IllegalStateException;', errMsg);\n        return null;\n    } else {\n        return item;\n    }\n}\nfunction CloseItem(id, map) {\n    delete map[id];\n}\nfunction OpenZipFile(zfile) {\n    return OpenItem(zfile, ZipFiles);\n}\nfunction CloseZipFile(id) {\n    CloseItem(id, ZipFiles);\n}\nfunction GetZipFile(thread, id) {\n    return GetItem(thread, id, ZipFiles, 'ZipFile not found.');\n}\nfunction OpenZipEntry(zentry) {\n    return OpenItem(zentry, ZipEntries);\n}\nfunction CloseZipEntry(id) {\n    CloseItem(id, ZipEntries);\n}\nfunction GetZipEntry(thread, id) {\n    return GetItem(thread, id, ZipEntries, 'Invalid ZipEntry.');\n}\nfunction OpenZStream(inflaterState) {\n    return OpenItem(inflaterState, ZStreams);\n}\nfunction CloseZStream(id) {\n    CloseItem(id, ZStreams);\n}\nfunction GetZStream(thread, id) {\n    return GetItem(thread, id, ZStreams, 'Inflater not found.');\n}\nvar CanUseCopyFastPath = false;\nif (typeof Int8Array !== 'undefined') {\n    var i8arr = new Int8Array(1);\n    var b = new Buffer(i8arr.buffer);\n    i8arr[0] = 100;\n    CanUseCopyFastPath = i8arr[0] == b.readInt8(0);\n}\nfunction isUint8Array(arr) {\n    if (arr && typeof Uint8Array !== 'undefined' && arr instanceof Uint8Array) {\n        return true;\n    }\n    return false;\n}\nfunction isInt8Array(arr) {\n    if (arr && typeof Int8Array !== 'undefined' && arr instanceof Int8Array) {\n        return true;\n    }\n    return false;\n}\nfunction i82u8(arr, start, len) {\n    if (isInt8Array(arr)) {\n        return new Uint8Array(arr.buffer, arr.byteOffset + start, len);\n    } else if (Array.isArray(arr)) {\n        if (typeof Uint8Array !== 'undefined') {\n            var i8arr = new Int8Array(len);\n            if (start === 0 && len === arr.length) {\n                i8arr.set(arr, 0);\n            } else {\n                i8arr.set(arr.slice(start, start + len), 0);\n            }\n            return new Uint8Array(i8arr.buffer);\n        } else {\n            var rv = new Array(len);\n            for (var i = 0; i < len; i++) {\n                rv[i] = arr[start + i] & 255;\n            }\n            return rv;\n        }\n    } else {\n        throw new TypeError('Invalid array.');\n    }\n}\nfunction u82i8(arr, start, len) {\n    if (isUint8Array(arr)) {\n        return new Int8Array(arr.buffer, arr.byteOffset + start, len);\n    } else if (Array.isArray(arr)) {\n        if (typeof Int8Array !== 'undefined') {\n            var u8arr = new Uint8Array(len);\n            if (start === 0 && len === arr.length) {\n                u8arr.set(arr, 0);\n            } else {\n                u8arr.set(arr.slice(start, start + len), 0);\n            }\n            return new Int8Array(u8arr.buffer);\n        } else {\n            var rv = new Array(len);\n            for (var i = 0; i < len; i++) {\n                rv[i] = arr[start + i];\n                if (rv[i] > 127) {\n                    rv[i] |= 4294967168;\n                }\n            }\n            return rv;\n        }\n    } else {\n        throw new TypeError('Invalid array.');\n    }\n}\nfunction buff2i8(buff) {\n    var arrayish = BFSUtils.buffer2Arrayish(buff);\n    return u82i8(arrayish, 0, arrayish.length);\n}\nvar java_util_concurrent_atomic_AtomicLong = function () {\n    function java_util_concurrent_atomic_AtomicLong() {\n    }\n    java_util_concurrent_atomic_AtomicLong['VMSupportsCS8()Z'] = function (thread) {\n        return true;\n    };\n    return java_util_concurrent_atomic_AtomicLong;\n}();\nvar java_util_jar_JarFile = function () {\n    function java_util_jar_JarFile() {\n    }\n    java_util_jar_JarFile['getMetaInfEntryNames()[Ljava/lang/String;'] = function (thread, javaThis) {\n        var zip = GetZipFile(thread, javaThis['java/util/zip/ZipFile/jzfile'].toNumber());\n        if (zip) {\n            if (!zip.existsSync('/META-INF')) {\n                return null;\n            }\n            var explorePath = ['/META-INF'];\n            var bsCl = thread.getBsCl();\n            var foundFiles = [util.initString(bsCl, 'META-INF/')];\n            while (explorePath.length > 0) {\n                var p = explorePath.pop();\n                var dirListing = zip.readdirSync(p);\n                for (var i = 0; i < dirListing.length; i++) {\n                    var newP = p + '/' + dirListing[i];\n                    if (zip.statSync(newP, false).isDirectory()) {\n                        explorePath.push(newP);\n                        foundFiles.push(util.initString(bsCl, newP.slice(1) + '/'));\n                    } else {\n                        foundFiles.push(util.initString(bsCl, newP.slice(1)));\n                    }\n                }\n                return util.newArrayFromData(thread, bsCl, '[Ljava/lang/String;', foundFiles);\n            }\n        }\n    };\n    return java_util_jar_JarFile;\n}();\nvar java_util_logging_FileHandler = function () {\n    function java_util_logging_FileHandler() {\n    }\n    java_util_logging_FileHandler['isSetUID()Z'] = function (thread) {\n        return false;\n    };\n    return java_util_logging_FileHandler;\n}();\nvar java_util_TimeZone = function () {\n    function java_util_TimeZone() {\n    }\n    java_util_TimeZone['getSystemTimeZoneID(Ljava/lang/String;)Ljava/lang/String;'] = function (thread, arg0) {\n        var offset = new Date().getTimezoneOffset() / 60;\n        return thread.getJVM().internString('GMT' + (offset > 0 ? '-' : '+') + offset);\n    };\n    java_util_TimeZone['getSystemGMTOffsetID()Ljava/lang/String;'] = function (thread) {\n        return null;\n    };\n    return java_util_TimeZone;\n}();\nvar java_util_zip_Adler32 = function () {\n    function java_util_zip_Adler32() {\n    }\n    java_util_zip_Adler32['update(II)I'] = function (thread, adler, byte) {\n        return adler32(adler, [byte & 255], 1, 0);\n    };\n    java_util_zip_Adler32['updateBytes(I[BII)I'] = function (thread, adler, b, off, len) {\n        return adler32(adler, i82u8(b.array, off, len), len, 0);\n    };\n    java_util_zip_Adler32['updateByteBuffer(IJII)I'] = function (thread, adler, addr, off, len) {\n        var heap = thread.getJVM().getHeap();\n        var buff = BFSUtils.buffer2Arrayish(heap.get_buffer(addr.toNumber() + off, len));\n        return adler32(adler, buff, buff.length, 0);\n    };\n    return java_util_zip_Adler32;\n}();\nvar java_util_zip_CRC32 = function () {\n    function java_util_zip_CRC32() {\n    }\n    java_util_zip_CRC32['update(II)I'] = function (thread, crc, byte) {\n        return crc32(crc, [byte & 255], 1, 0);\n    };\n    java_util_zip_CRC32['updateBytes(I[BII)I'] = function (thread, crc, b, off, len) {\n        return crc32(crc, i82u8(b.array, off, len), len, 0);\n    };\n    java_util_zip_CRC32['updateByteBuffer(IJII)I'] = function (thread, crc, addr, off, len) {\n        var heap = thread.getJVM().getHeap();\n        var buff = BFSUtils.buffer2Arrayish(heap.get_buffer(addr.toNumber() + off, len));\n        return crc32(crc, buff, buff.length, 0);\n    };\n    return java_util_zip_CRC32;\n}();\nvar java_util_zip_Deflater = function () {\n    function java_util_zip_Deflater() {\n    }\n    java_util_zip_Deflater['initIDs()V'] = function (thread) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_util_zip_Deflater['init(IIZ)J'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_util_zip_Deflater['setDictionary(J[BII)V'] = function (thread, arg0, arg1, arg2, arg3) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_util_zip_Deflater['deflateBytes(J[BIII)I'] = function (thread, javaThis, arg0, arg1, arg2, arg3, arg4) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_util_zip_Deflater['getAdler(J)I'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_util_zip_Deflater['reset(J)V'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_util_zip_Deflater['end(J)V'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    return java_util_zip_Deflater;\n}();\nvar java_util_zip_Inflater = function () {\n    function java_util_zip_Inflater() {\n    }\n    java_util_zip_Inflater['initIDs()V'] = function (thread) {\n    };\n    java_util_zip_Inflater['init(Z)J'] = function (thread, nowrap) {\n        var strm = new ZStreamCons();\n        var ret = inflate.inflateInit2(strm, nowrap ? -MAX_WBITS : MAX_WBITS);\n        switch (ret) {\n        case 0:\n            var num = OpenZStream(strm);\n            return Long.fromNumber(num);\n        default:\n            var msg = strm.msg !== null ? strm.msg : ret == -2 ? 'inflateInit2 returned Z_STREAM_ERROR' : 'unknown error initializing zlib library';\n            thread.throwNewException('Ljava/lang/InternalError;', msg);\n            break;\n        }\n    };\n    java_util_zip_Inflater['setDictionary(J[BII)V'] = function (thread, arg0, arg1, arg2, arg3) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_util_zip_Inflater['inflateBytes(J[BII)I'] = function (thread, javaThis, addr, b, off, len) {\n        var strm = GetZStream(thread, addr.toNumber());\n        if (strm == null) {\n            return;\n        }\n        var thisBuf = javaThis['java/util/zip/Inflater/buf'];\n        var thisOff = javaThis['java/util/zip/Inflater/off'];\n        var thisLen = javaThis['java/util/zip/Inflater/len'];\n        if (thisLen === 0 || len === 0) {\n            return 0;\n        }\n        var inBuf = thisBuf.array;\n        var outBuf = b.array;\n        strm.input = i82u8(inBuf, 0, inBuf.length);\n        strm.next_in = thisOff;\n        strm.avail_in = thisLen;\n        strm.output = i82u8(outBuf, 0, outBuf.length);\n        strm.next_out = off;\n        strm.avail_out = len;\n        var ret = inflate.inflate(strm, 2);\n        var lenRead = len - strm.avail_out;\n        if (!isInt8Array(outBuf)) {\n            var result = strm.output;\n            for (var i = 0; i < lenRead; i++) {\n                var byte = result[i + off];\n                if (byte > 127) {\n                    byte |= 4294967168;\n                }\n                outBuf[i + off] = byte;\n            }\n        }\n        switch (ret) {\n        case 1:\n            javaThis['java/util/zip/Inflater/finished'] = 1;\n        case 0:\n            thisOff += thisLen - strm.avail_in;\n            javaThis['java/util/zip/Inflater/off'] = thisOff;\n            javaThis['java/util/zip/Inflater/len'] = strm.avail_in;\n            return lenRead;\n        case 2:\n            javaThis['java/util/zip/Inflater/needDict'] = 1;\n            thisOff += thisLen - strm.avail_in;\n            javaThis['java/util/zip/Inflater/off'] = thisOff;\n            javaThis['java/util/zip/Inflater/len'] = strm.avail_in;\n            return 0;\n        case -5:\n            return 0;\n        case -3:\n            thread.throwNewException('Ljava/util/zip/DataFormatException;', strm.msg);\n            return;\n        default:\n            thread.throwNewException('Ljava/lang/InternalError;', strm.msg);\n            return;\n        }\n    };\n    java_util_zip_Inflater['getAdler(J)I'] = function (thread, addr) {\n        var strm = GetZStream(thread, addr.toNumber());\n        if (strm) {\n            return strm.adler;\n        }\n    };\n    java_util_zip_Inflater['reset(J)V'] = function (thread, addr) {\n        var addrNum = addr.toNumber();\n        var strm = GetZStream(thread, addrNum);\n        if (strm) {\n            var newStrm = new ZStreamCons();\n            var ret = inflate.inflateInit2(newStrm, strm.state.wrap ? MAX_WBITS : -MAX_WBITS);\n            ZStreams[addrNum] = newStrm;\n        }\n    };\n    java_util_zip_Inflater['end(J)V'] = function (thread, addr) {\n        var strm = GetZStream(thread, addr.toNumber());\n        if (strm) {\n            if (inflate.inflateEnd(strm) === -2) {\n                thread.throwNewException('Ljava/lang/InternalError;', strm.msg);\n            } else {\n                CloseZStream(addr.toNumber());\n            }\n        }\n    };\n    return java_util_zip_Inflater;\n}();\nvar java_util_zip_ZipFile = function () {\n    function java_util_zip_ZipFile() {\n    }\n    java_util_zip_ZipFile['initIDs()V'] = function (thread) {\n    };\n    java_util_zip_ZipFile['getEntry(J[BZ)J'] = function (thread, jzfile, nameBytes, addSlash) {\n        var zipfs = GetZipFile(thread, jzfile.toNumber());\n        if (zipfs) {\n            var name_1 = new Buffer(nameBytes.array).toString('utf8');\n            if (name_1[0] !== '/') {\n                name_1 = '/' + name_1;\n            }\n            name_1 = path.resolve(name_1);\n            try {\n                return Long.fromNumber(OpenZipEntry(zipfs.getCentralDirectoryEntry(name_1)));\n            } catch (e) {\n                return Long.ZERO;\n            }\n        }\n    };\n    java_util_zip_ZipFile['freeEntry(JJ)V'] = function (thread, jzfile, jzentry) {\n        CloseZipEntry(jzentry.toNumber());\n    };\n    java_util_zip_ZipFile['getNextEntry(JI)J'] = function (thread, jzfile, index) {\n        var zipfs = GetZipFile(thread, jzfile.toNumber());\n        if (zipfs) {\n            try {\n                return Long.fromNumber(OpenZipEntry(zipfs.getCentralDirectoryEntryAt(index)));\n            } catch (e) {\n                return Long.ZERO;\n            }\n        }\n    };\n    java_util_zip_ZipFile['close(J)V'] = function (thread, jzfile) {\n        CloseZipFile(jzfile.toNumber());\n    };\n    java_util_zip_ZipFile['open(Ljava/lang/String;IJZ)J'] = function (thread, nameObj, mode, modified, usemmap) {\n        var name = nameObj.toString();\n        var cpath = thread.getBsCl().getClassPathItems();\n        for (var i = 0; i < cpath.length; i++) {\n            var cpathItem = cpath[i];\n            if (cpathItem instanceof AbstractClasspathJar) {\n                if (path.resolve(cpathItem.getPath()) === path.resolve(name)) {\n                    return Long.fromNumber(OpenZipFile(cpathItem.getFS()));\n                }\n            }\n        }\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.readFile(name, function (err, data) {\n            if (err) {\n                thread.throwNewException('Ljava/io/IOException;', err.message);\n            } else {\n                thread.asyncReturn(Long.fromNumber(OpenZipFile(new BrowserFS.FileSystem.ZipFS(data, name))), null);\n            }\n        });\n    };\n    java_util_zip_ZipFile['getTotal(J)I'] = function (thread, jzfile) {\n        var zipfs = GetZipFile(thread, jzfile.toNumber());\n        if (zipfs) {\n            return zipfs.getNumberOfCentralDirectoryEntries();\n        }\n    };\n    java_util_zip_ZipFile['startsWithLOC(J)Z'] = function (thread, arg0) {\n        return 1;\n    };\n    java_util_zip_ZipFile['read(JJJ[BII)I'] = function (thread, jzfile, jzentry, pos, b, off, len) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        var posNum = pos.toNumber();\n        if (zipentry) {\n            if (len <= 0) {\n                return 0;\n            }\n            var data = zipentry.getRawData();\n            if (posNum >= data.length) {\n                thread.throwNewException('Ljava/io/IOException;', 'End of zip file.');\n                return;\n            }\n            if (posNum + len > data.length) {\n                len = data.length - posNum;\n            }\n            var arr = b.array;\n            if (CanUseCopyFastPath) {\n                var i8arr = arr;\n                var b_1 = new Buffer(i8arr.buffer);\n                return data.copy(b_1, off + i8arr.byteOffset, posNum, posNum + len);\n            } else {\n                for (var i = 0; i < len; i++) {\n                    arr[off + i] = data.readInt8(posNum + i);\n                }\n                return len;\n            }\n        }\n    };\n    java_util_zip_ZipFile['getEntryTime(J)J'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return Long.fromNumber(zipentry.rawLastModFileTime());\n        }\n    };\n    java_util_zip_ZipFile['getEntryCrc(J)J'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return Long.fromNumber(zipentry.crc32());\n        }\n    };\n    java_util_zip_ZipFile['getEntryCSize(J)J'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return Long.fromNumber(zipentry.compressedSize());\n        }\n    };\n    java_util_zip_ZipFile['getEntrySize(J)J'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return Long.fromNumber(zipentry.uncompressedSize());\n        }\n    };\n    java_util_zip_ZipFile['getEntryMethod(J)I'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return zipentry.compressionMethod();\n        }\n    };\n    java_util_zip_ZipFile['getEntryFlag(J)I'] = function (thread, jzentry) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            return zipentry.flag();\n        }\n    };\n    java_util_zip_ZipFile['getCommentBytes(J)[B'] = function (thread, jzfile) {\n        var zipfile = GetZipFile(thread, jzfile.toNumber());\n        if (zipfile) {\n            var eocd = zipfile.getEndOfCentralDirectory();\n            var comment = eocd.rawCdZipComment();\n            return util.newArrayFromDataWithClass(thread, thread.getBsCl().getInitializedClass(thread, '[B'), buff2i8(comment));\n        }\n    };\n    java_util_zip_ZipFile['getEntryBytes(JI)[B'] = function (thread, jzentry, type) {\n        var zipentry = GetZipEntry(thread, jzentry.toNumber());\n        if (zipentry) {\n            switch (type) {\n            case 2:\n                return util.newArrayFromDataWithClass(thread, thread.getBsCl().getInitializedClass(thread, '[B'), buff2i8(zipentry.rawFileComment()));\n            case 1:\n                return util.newArrayFromDataWithClass(thread, thread.getBsCl().getInitializedClass(thread, '[B'), buff2i8(zipentry.extraField()));\n            case 0:\n                return util.newArrayFromDataWithClass(thread, thread.getBsCl().getInitializedClass(thread, '[B'), buff2i8(zipentry.rawFileName()));\n            default:\n                return null;\n            }\n        }\n    };\n    java_util_zip_ZipFile['getZipMessage(J)Ljava/lang/String;'] = function (thread, jzfile) {\n        return util.initString(thread.getBsCl(), 'Something bad happened.');\n    };\n    return java_util_zip_ZipFile;\n}();\nregisterNatives({\n    'java/util/concurrent/atomic/AtomicLong': java_util_concurrent_atomic_AtomicLong,\n    'java/util/jar/JarFile': java_util_jar_JarFile,\n    'java/util/logging/FileHandler': java_util_logging_FileHandler,\n    'java/util/TimeZone': java_util_TimeZone,\n    'java/util/zip/Adler32': java_util_zip_Adler32,\n    'java/util/zip/CRC32': java_util_zip_CRC32,\n    'java/util/zip/Deflater': java_util_zip_Deflater,\n    'java/util/zip/Inflater': java_util_zip_Inflater,\n    'java/util/zip/ZipFile': java_util_zip_ZipFile\n});\n//# sourceMappingURL=java_util.js.map"]}
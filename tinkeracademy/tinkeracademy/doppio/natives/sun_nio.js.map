{"version":3,"sources":["../../../../../../../../tmp/doppio-temp27519/tmp_release/src/natives/sun_nio.js"],"names":["getStringFromHeap","thread","ptrLong","heap","getJVM","getHeap","ptr","toNumber","len","get_signed_byte","get_buffer","toString","stringToByteArray","str","buff","Buffer","length","arr","util","newArray","getBsCl","i","array","readUInt8","convertError","err","cb","setStatus","ThreadStatus","ASYNC_WAITING","code","initializeClass","noSuchFileException","cons","getConstructor","rv","initString","path","e","throwException","fileAlreadyExistsException","unixException","unixConstants","unixCons","errCode","message","convertStats","stats","jvmStats","mode","Long","fromNumber","ino","dev","rdev","nlink","uid","gid","size","atime","date2components","mtime","ctime","Math","floor","birthtime","getTime","flagTest","flag","mask","flag2nodeflag","UnixConstants","UCCls","getInitializedClass","throwNewException","sync","failIfExists","throwNodeError","convertedErr","date","dateInMs","Doppio","require","VM","Util","Enums","fs","sun_nio_ch_FileChannelImpl","javaThis","arg0","arg1","arg2","fd","offset","equals","NEG_ONE","$pos","sun_nio_ch_NativeThread","sun_nio_ch_IOUtil","sun_nio_ch_FileDispatcherImpl","fdObj","address","addr","buf","read","bytesRead","asyncReturn","fstat","ftruncate","close","DirFd","listing","this","_pos","_listing","prototype","next","undefined","FDMap","_map","newEntry","entry","_nextFd","removeEntry","exceptionType","getEntry","dirMap","fileMap","sun_nio_fs_UnixNativeDispatcher","process","cwd","readInt8","pathAddress","flags","flagStr","pathStr","open","arg3","flagsAddress","flagsStr","unlink","oldAddr","newAddr","rename","pathAddr","mkdir","rmdir","readlink","linkPath","initCarr","realpath","resolvedPath","stat","lstat","readdir","files","errObj","dirFd","nbyte","write","bytesWritten","pathString","checker","are_in_browser","access","registerNatives","sun/nio/ch/FileChannelImpl","sun/nio/ch/NativeThread","sun/nio/ch/IOUtil","sun/nio/ch/FileDispatcherImpl","sun/nio/fs/UnixNativeDispatcher"],"mappings":"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","file":"sun_nio.js","sourcesContent":["var Doppio = require('../doppiojvm');\nvar util = Doppio.VM.Util;\nvar Long = Doppio.VM.Long;\nvar ThreadStatus = Doppio.VM.Enums.ThreadStatus;\nvar fs = require('fs');\nvar sun_nio_ch_FileChannelImpl = function () {\n    function sun_nio_ch_FileChannelImpl() {\n    }\n    sun_nio_ch_FileChannelImpl['map0(IJJ)J'] = function (thread, javaThis, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_nio_ch_FileChannelImpl['unmap0(JJ)I'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_nio_ch_FileChannelImpl['position0(Ljava/io/FileDescriptor;J)J'] = function (thread, javaThis, fd, offset) {\n        return Long.fromNumber(offset.equals(Long.NEG_ONE) ? fd.$pos : fd.$pos = offset.toNumber());\n    };\n    sun_nio_ch_FileChannelImpl['initIDs()J'] = function (thread) {\n        return Long.fromNumber(4096);\n    };\n    return sun_nio_ch_FileChannelImpl;\n}();\nvar sun_nio_ch_NativeThread = function () {\n    function sun_nio_ch_NativeThread() {\n    }\n    sun_nio_ch_NativeThread['current()J'] = function (thread) {\n        return Long.fromNumber(-1);\n    };\n    sun_nio_ch_NativeThread['signal(J)V'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_ch_NativeThread['init()V'] = function (thread) {\n    };\n    return sun_nio_ch_NativeThread;\n}();\nvar sun_nio_ch_IOUtil = function () {\n    function sun_nio_ch_IOUtil() {\n    }\n    sun_nio_ch_IOUtil['iovMax()I'] = function (thread) {\n        return 0;\n    };\n    return sun_nio_ch_IOUtil;\n}();\nvar sun_nio_ch_FileDispatcherImpl = function () {\n    function sun_nio_ch_FileDispatcherImpl() {\n    }\n    sun_nio_ch_FileDispatcherImpl['init()V'] = function (thread) {\n    };\n    sun_nio_ch_FileDispatcherImpl['read0(Ljava/io/FileDescriptor;JI)I'] = function (thread, fdObj, address, len) {\n        var fd = fdObj['java/io/FileDescriptor/fd'], addr = address.toNumber(), buf = thread.getJVM().getHeap().get_buffer(addr, len);\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.read(fd, buf, 0, len, null, function (err, bytesRead) {\n            if (err) {\n                thread.throwNewException('Ljava/io/IOException;', 'Error reading file: ' + err);\n            } else {\n                thread.asyncReturn(bytesRead);\n            }\n        });\n    };\n    sun_nio_ch_FileDispatcherImpl['preClose0(Ljava/io/FileDescriptor;)V'] = function (thread, arg0) {\n    };\n    sun_nio_ch_FileDispatcherImpl['close0(Ljava/io/FileDescriptor;)V'] = function (thread, fdObj) {\n        sun_nio_ch_FileDispatcherImpl['closeIntFD(I)V'](thread, fdObj['java/io/FileDescriptor/fd']);\n    };\n    sun_nio_ch_FileDispatcherImpl['size0(Ljava/io/FileDescriptor;)J'] = function (thread, fdObj) {\n        var fd = fdObj['java/io/FileDescriptor/fd'];\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.fstat(fd, function (err, stats) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(Long.fromNumber(stats.size), null);\n            }\n        });\n    };\n    sun_nio_ch_FileDispatcherImpl['truncate0(Ljava/io/FileDescriptor;J)I'] = function (thread, fdObj, size) {\n        var fd = fdObj['java/io/FileDescriptor/fd'];\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.ftruncate(fd, size.toNumber(), function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(0);\n            }\n        });\n    };\n    sun_nio_ch_FileDispatcherImpl['closeIntFD(I)V'] = function (thread, fd) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.close(fd, function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    return sun_nio_ch_FileDispatcherImpl;\n}();\nvar DirFd = function () {\n    function DirFd(listing) {\n        this._pos = 0;\n        this._listing = listing;\n    }\n    DirFd.prototype.next = function () {\n        var next = this._listing[this._pos++];\n        if (next === undefined) {\n            next = null;\n        }\n        return next;\n    };\n    return DirFd;\n}();\nvar FDMap = function () {\n    function FDMap() {\n        this._map = {};\n    }\n    FDMap.prototype.newEntry = function (entry) {\n        var fd = FDMap._nextFd++;\n        this._map[fd] = entry;\n        return fd;\n    };\n    FDMap.prototype.removeEntry = function (thread, fd, exceptionType) {\n        if (this._map[fd]) {\n            delete this._map[fd];\n        } else {\n            thread.throwNewException(exceptionType, 'Invalid file descriptor: ' + fd);\n        }\n    };\n    FDMap.prototype.getEntry = function (thread, exceptionType, fd) {\n        var entry = this._map[fd];\n        if (!entry) {\n            thread.throwNewException(exceptionType, 'Invalid file descriptor: ' + fd);\n            return null;\n        } else {\n            return entry;\n        }\n    };\n    FDMap._nextFd = 1;\n    return FDMap;\n}();\nvar dirMap = new FDMap(), fileMap = new FDMap();\nfunction getStringFromHeap(thread, ptrLong) {\n    var heap = thread.getJVM().getHeap(), ptr = ptrLong.toNumber(), len = 0;\n    while (heap.get_signed_byte(ptr + len) !== 0) {\n        len++;\n    }\n    return heap.get_buffer(ptr, len).toString();\n}\nfunction stringToByteArray(thread, str) {\n    if (!str) {\n        return null;\n    }\n    var buff = new Buffer(str, 'utf8'), len = buff.length, arr = util.newArray(thread, thread.getBsCl(), '[B', len);\n    for (var i = 0; i < len; i++) {\n        arr.array[i] = buff.readUInt8(i);\n    }\n    return arr;\n}\nfunction convertError(thread, err, cb) {\n    thread.setStatus(ThreadStatus.ASYNC_WAITING);\n    if (err.code === 'ENOENT') {\n        thread.getBsCl().initializeClass(thread, 'Ljava/nio/file/NoSuchFileException;', function (noSuchFileException) {\n            var cons = noSuchFileException.getConstructor(thread), rv = new cons(thread);\n            rv['<init>(Ljava/lang/String;)V'](thread, [util.initString(thread.getBsCl(), err.path)], function (e) {\n                thread.throwException(rv);\n            });\n        });\n    } else if (err.code === 'EEXIST') {\n        thread.getBsCl().initializeClass(thread, 'Ljava/nio/file/FileAlreadyExistsException;', function (fileAlreadyExistsException) {\n            var cons = fileAlreadyExistsException.getConstructor(thread), rv = new cons(thread);\n            rv['<init>(Ljava/lang/String;)V'](thread, [util.initString(thread.getBsCl(), err.path)], function (e) {\n                cb(rv);\n            });\n        });\n    } else {\n        thread.getBsCl().initializeClass(thread, 'Lsun/nio/fs/UnixException;', function (unixException) {\n            thread.getBsCl().initializeClass(thread, 'Lsun/nio/fs/UnixConstants;', function (unixConstants) {\n                var cons = unixException.getConstructor(thread), rv = new cons(thread), unixCons = unixConstants.getConstructor(thread), errCode = unixCons['sun/nio/fs/UnixConstants/' + err.code];\n                if (typeof errCode !== 'number') {\n                    errCode = -1;\n                }\n                rv['sun/nio/fs/UnixException/errno'] = errCode;\n                rv['sun/nio/fs/UnixException/msg'] = util.initString(thread.getBsCl(), err.message);\n                cb(rv);\n            });\n        });\n    }\n}\nfunction convertStats(stats, jvmStats) {\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_mode'] = stats.mode;\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_ino'] = Long.fromNumber(stats.ino);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_dev'] = Long.fromNumber(stats.dev);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_rdev'] = Long.fromNumber(stats.rdev);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_nlink'] = stats.nlink;\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_uid'] = stats.uid;\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_gid'] = stats.gid;\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_size'] = Long.fromNumber(stats.size);\n    var atime = date2components(stats.atime), mtime = date2components(stats.mtime), ctime = date2components(stats.ctime);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_atime_sec'] = Long.fromNumber(atime[0]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_atime_nsec'] = Long.fromNumber(atime[1]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_mtime_sec'] = Long.fromNumber(mtime[0]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_mtime_nsec'] = Long.fromNumber(mtime[1]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_ctime_sec'] = Long.fromNumber(ctime[0]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_ctime_nsec'] = Long.fromNumber(ctime[1]);\n    jvmStats['sun/nio/fs/UnixFileAttributes/st_birthtime_sec'] = Long.fromNumber(Math.floor(stats.birthtime.getTime() / 1000));\n}\nvar UnixConstants = null;\nfunction flagTest(flag, mask) {\n    return (flag & mask) === mask;\n}\nfunction flag2nodeflag(thread, flag) {\n    if (UnixConstants === null) {\n        var UCCls = thread.getBsCl().getInitializedClass(thread, 'Lsun/nio/fs/UnixConstants;');\n        if (UCCls === null) {\n            thread.throwNewException('Ljava/lang/InternalError;', 'UnixConstants is not initialized?');\n            return null;\n        }\n        UnixConstants = UCCls.getConstructor(thread);\n    }\n    var sync = flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_SYNC']) || flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_DSYNC']);\n    var failIfExists = flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_EXCL'] | UnixConstants['sun/nio/fs/UnixConstants/O_CREAT']);\n    if (flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_RDONLY'])) {\n        return sync ? 'rs' : 'r';\n    } else if (flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_WRONLY'])) {\n        if (flag & UnixConstants['sun/nio/fs/UnixConstants/O_APPEND']) {\n            return failIfExists ? 'ax' : 'a';\n        } else {\n            return failIfExists ? 'wx' : 'w';\n        }\n    } else if (flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_RDWR'])) {\n        if (flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_APPEND'])) {\n            return failIfExists ? 'ax+' : 'a+';\n        } else if (flagTest(flag, UnixConstants['sun/nio/fs/UnixConstants/O_CREAT'])) {\n            return failIfExists ? 'wx+' : 'w+';\n            return 'wx+';\n        } else {\n            return sync ? 'rs+' : 'r+';\n        }\n    } else {\n        thread.throwNewException('Lsun/nio/fs/UnixException;', 'Invalid open flag: ' + flag + '.');\n        return null;\n    }\n}\nfunction throwNodeError(thread, err) {\n    convertError(thread, err, function (convertedErr) {\n        thread.throwException(convertedErr);\n    });\n}\nfunction date2components(date) {\n    var dateInMs = date.getTime();\n    return [\n        Math.floor(dateInMs / 1000),\n        dateInMs % 1000 * 1000000\n    ];\n}\nvar sun_nio_fs_UnixNativeDispatcher = function () {\n    function sun_nio_fs_UnixNativeDispatcher() {\n    }\n    sun_nio_fs_UnixNativeDispatcher['getcwd()[B'] = function (thread) {\n        var buff = new Buffer(process.cwd() + '\\0', 'utf8'), len = buff.length, rv = util.newArray(thread, thread.getBsCl(), '[B', len), i;\n        for (i = 0; i < len; i++) {\n            rv.array[i] = buff.readInt8(i);\n        }\n        return rv;\n    };\n    sun_nio_fs_UnixNativeDispatcher['dup(I)I'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_nio_fs_UnixNativeDispatcher['open0(JII)I'] = function (thread, pathAddress, flags, mode) {\n        var flagStr = flag2nodeflag(thread, flags);\n        if (flagStr !== null) {\n            thread.setStatus(ThreadStatus.ASYNC_WAITING);\n            var pathStr = getStringFromHeap(thread, pathAddress);\n            fs.open(pathStr, flagStr, mode, function (err, fd) {\n                if (err) {\n                    throwNodeError(thread, err);\n                } else {\n                    thread.asyncReturn(fd);\n                }\n            });\n        }\n    };\n    sun_nio_fs_UnixNativeDispatcher['openat0(IJII)I'] = function (thread, arg0, arg1, arg2, arg3) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_nio_fs_UnixNativeDispatcher['close(I)V'] = function (thread, fd) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.close(fd, function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['fopen0(JJ)J'] = function (thread, pathAddress, flagsAddress) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        var pathStr = getStringFromHeap(thread, pathAddress);\n        var flagsStr = getStringFromHeap(thread, flagsAddress);\n        fs.open(pathStr, flagsStr, function (err, fd) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(Long.fromNumber(fd), null);\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['fclose(J)V'] = function (thread, fd) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.close(fd.toNumber(), function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['link0(JJ)V'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['unlink0(J)V'] = function (thread, pathAddress) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.unlink(getStringFromHeap(thread, pathAddress), function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['unlinkat0(IJI)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['mknod0(JIJ)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['rename0(JJ)V'] = function (thread, oldAddr, newAddr) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.rename(getStringFromHeap(thread, oldAddr), getStringFromHeap(thread, newAddr), function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['renameat0(IJIJ)V'] = function (thread, arg0, arg1, arg2, arg3) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['mkdir0(JI)V'] = function (thread, pathAddr, mode) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.mkdir(getStringFromHeap(thread, pathAddr), mode, function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['rmdir0(J)V'] = function (thread, pathAddr) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.rmdir(getStringFromHeap(thread, pathAddr), function (err) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['readlink0(J)[B'] = function (thread, pathAddr) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.readlink(getStringFromHeap(thread, pathAddr), function (err, linkPath) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(util.initCarr(thread.getBsCl(), linkPath));\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['realpath0(J)[B'] = function (thread, pathAddress) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.realpath(getStringFromHeap(thread, pathAddress), function (err, resolvedPath) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(util.initCarr(thread.getBsCl(), resolvedPath));\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['symlink0(JJ)V'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['stat0(JLsun/nio/fs/UnixFileAttributes;)V'] = function (thread, pathAddress, jvmStats) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.stat(getStringFromHeap(thread, pathAddress), function (err, stats) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                convertStats(stats, jvmStats);\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['lstat0(JLsun/nio/fs/UnixFileAttributes;)V'] = function (thread, pathAddress, jvmStats) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.lstat(getStringFromHeap(thread, pathAddress), function (err, stats) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                convertStats(stats, jvmStats);\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['fstat(ILsun/nio/fs/UnixFileAttributes;)V'] = function (thread, fd, jvmStats) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.fstat(fd, function (err, stats) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                convertStats(stats, jvmStats);\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['fstatat0(IJILsun/nio/fs/UnixFileAttributes;)V'] = function (thread, arg0, arg1, arg2, arg3) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['chown0(JII)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['lchown0(JII)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['fchown(III)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['chmod0(JI)V'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['fchmod(II)V'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['utimes0(JJJ)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['futimes(IJJ)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['opendir0(J)J'] = function (thread, ptr) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        fs.readdir(getStringFromHeap(thread, ptr), function (err, files) {\n            if (err) {\n                convertError(thread, err, function (errObj) {\n                    thread.throwException(errObj);\n                });\n            } else {\n                thread.asyncReturn(Long.fromNumber(dirMap.newEntry(new DirFd(files))), null);\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['fdopendir(I)J'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_nio_fs_UnixNativeDispatcher['closedir(J)V'] = function (thread, arg0) {\n        dirMap.removeEntry(thread, arg0.toNumber(), 'Lsun/nio/fs/UnixException;');\n    };\n    sun_nio_fs_UnixNativeDispatcher['readdir(J)[B'] = function (thread, fd) {\n        var dirFd = dirMap.getEntry(thread, 'Lsun/nio/fs/UnixException;', fd.toNumber());\n        if (dirFd) {\n            return stringToByteArray(thread, dirFd.next());\n        }\n    };\n    sun_nio_fs_UnixNativeDispatcher['read(IJI)I'] = function (thread, fd, buf, nbyte) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        var buff = thread.getJVM().getHeap().get_buffer(buf.toNumber(), nbyte);\n        fs.read(fd, buff, 0, nbyte, null, function (err, bytesRead) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(bytesRead);\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['write(IJI)I'] = function (thread, fd, buf, nbyte) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        var buff = thread.getJVM().getHeap().get_buffer(buf.toNumber(), nbyte);\n        fs.write(fd, buff, 0, nbyte, null, function (err, bytesWritten) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn(bytesWritten);\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['access0(JI)V'] = function (thread, pathAddress, arg1) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        var pathString = getStringFromHeap(thread, pathAddress);\n        var checker = util.are_in_browser() ? fs.stat : fs.access;\n        checker(pathString, function (err, stat) {\n            if (err) {\n                throwNodeError(thread, err);\n            } else {\n                thread.asyncReturn();\n            }\n        });\n    };\n    sun_nio_fs_UnixNativeDispatcher['getpwuid(I)[B'] = function (thread, arg0) {\n        return util.initCarr(thread.getBsCl(), 'doppio');\n    };\n    sun_nio_fs_UnixNativeDispatcher['getgrgid(I)[B'] = function (thread, arg0) {\n        return util.initCarr(thread.getBsCl(), 'doppio');\n    };\n    sun_nio_fs_UnixNativeDispatcher['getpwnam0(J)I'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_nio_fs_UnixNativeDispatcher['getgrnam0(J)I'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    sun_nio_fs_UnixNativeDispatcher['statvfs0(JLsun/nio/fs/UnixFileStoreAttributes;)V'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    sun_nio_fs_UnixNativeDispatcher['pathconf0(JI)J'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_nio_fs_UnixNativeDispatcher['fpathconf(II)J'] = function (thread, arg0, arg1) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_nio_fs_UnixNativeDispatcher['strerror(I)[B'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    sun_nio_fs_UnixNativeDispatcher['init()I'] = function (thread) {\n        return 0;\n    };\n    return sun_nio_fs_UnixNativeDispatcher;\n}();\nregisterNatives({\n    'sun/nio/ch/FileChannelImpl': sun_nio_ch_FileChannelImpl,\n    'sun/nio/ch/NativeThread': sun_nio_ch_NativeThread,\n    'sun/nio/ch/IOUtil': sun_nio_ch_IOUtil,\n    'sun/nio/ch/FileDispatcherImpl': sun_nio_ch_FileDispatcherImpl,\n    'sun/nio/fs/UnixNativeDispatcher': sun_nio_fs_UnixNativeDispatcher\n});\n//# sourceMappingURL=sun_nio.js.map"]}
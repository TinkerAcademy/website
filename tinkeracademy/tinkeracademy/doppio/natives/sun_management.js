var Doppio=require("../doppiojvm"),util=Doppio.VM.Util,Long=Doppio.VM.Long,sun_management_MemoryImpl=function(){function a(){}return a["getMemoryPools0()[Ljava/lang/management/MemoryPoolMXBean;"]=function(a){return util.newArrayFromData(a,a.getBsCl(),"[Lsun/management/MemoryPoolImpl;",[])},a["getMemoryManagers0()[Ljava/lang/management/MemoryManagerMXBean;"]=function(a){return util.newArrayFromData(a,a.getBsCl(),"[Lsun/management/MemoryManagerImpl;",[])},a["getMemoryUsage0(Z)Ljava/lang/management/MemoryUsage;"]=function(a,b,c){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["setVerboseGC(Z)V"]=function(a,b,c){a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented.")},a}(),sun_management_VMManagementImpl=function(){function a(){}return a["getVersion0()Ljava/lang/String;"]=function(a){return a.getJVM().internString("1.2")},a["initOptionalSupportFields()V"]=function(a){var b=a.getBsCl().getInitializedClass(a,"Lsun/management/VMManagementImpl;").getConstructor(a);b["sun/management/VMManagementImpl/compTimeMonitoringSupport"]=0,b["sun/management/VMManagementImpl/threadContentionMonitoringSupport"]=0,b["sun/management/VMManagementImpl/currentThreadCpuTimeSupport"]=0,b["sun/management/VMManagementImpl/otherThreadCpuTimeSupport"]=0,b["sun/management/VMManagementImpl/bootClassPathSupport"]=0,b["sun/management/VMManagementImpl/objectMonitorUsageSupport"]=0,b["sun/management/VMManagementImpl/synchronizerUsageSupport"]=0},a["isThreadContentionMonitoringEnabled()Z"]=function(a,b){return!1},a["isThreadCpuTimeEnabled()Z"]=function(a,b){return!1},a["getTotalClassCount()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getUnloadedClassCount()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getVerboseClass()Z"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),0},a["getVerboseGC()Z"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),0},a["getProcessId()I"]=function(a,b){return 1},a["getVmArguments0()[Ljava/lang/String;"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getStartupTime()J"]=function(a,b){return Long.fromNumber(a.getJVM().getStartupTime().getTime())},a["getAvailableProcessors()I"]=function(a,b){return 1},a["getTotalCompileTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getTotalThreadCount()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getLiveThreadCount()I"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),0},a["getPeakThreadCount()I"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),0},a["getDaemonThreadCount()I"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),0},a["getSafepointCount()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getTotalSafepointTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getSafepointSyncTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getTotalApplicationNonStoppedTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getLoadedClassSize()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getUnloadedClassSize()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getClassLoadingTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getMethodDataSize()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getInitializedClassCount()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getClassInitializationTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a["getClassVerificationTime()J"]=function(a,b){return a.throwNewException("Ljava/lang/UnsatisfiedLinkError;","Native method not implemented."),null},a}();registerNatives({"sun/management/MemoryImpl":sun_management_MemoryImpl,"sun/management/VMManagementImpl":sun_management_VMManagementImpl});
//# sourceMappingURL=data:application/json;base64,
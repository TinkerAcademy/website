{"version":3,"sources":["../../../../../../../../tmp/doppio-temp27519/tmp_release/src/natives/java_lang.js"],"names":["arrayGet","thread","arr","idx","throwNewException","array","length","isNotNull","obj","verifyArray","getClass","ArrayClassData","initializeMemberName","mn","ref","refKind","flags","type","name","existingRefKind","MemberNameConstants","REFERENCE_KIND_SHIFT","Method","IS_METHOD","cls","accessFlags","isInterface","MethodHandleReferenceKind","INVOKEINTERFACE","isStatic","INVOKESTATIC","IS_CONSTRUCTOR","INVOKESPECIAL","INVOKEVIRTUAL","vmtarget","getVMTargetBridgeMethod","vmindex","getVMIndexForMethod","methodFlags","IS_FIELD","GETSTATIC","GETFIELD","getVMIndexForField","getRawByte","getJVM","internString","rawDescriptor","getClassObject","method","isCallerSensitive","CALLER_SENSITIVE","Doppio","require","ReferenceClassData","VM","ClassFile","logging","Debug","Logging","util","Util","ThreadStatus","Enums","Long","assert","Assert","PrimitiveClassData","debug","java_lang_Class","jvmStr","initialize","jclo","caller","classname","int_classname","toString","verify_int_classname","loader","getLoader","setStatus","ASYNC_WAITING","initializeClass","asyncReturn","resolveClass","javaThis","isCastable","$cls","initString","getBsCl","getExternalName","getSuperClass","newArrayFromData","getInterfaces","map","iface","getComponentClass","arg0","bsCl","em","getAttribute","rv","newArray","encClassRef","encClass","encMethod","descriptor","isResolved","resolve","status","declaringName","entry","i","len","icls","myClass","getInternalName","innerClassInfo","classes","outerInfoIndex","constantPool","get","innerInfoIndex","getProtectionDomain","type_desc","typestr2descriptor","prim_cls","getInitializedClass","is_primitive_type","sigAttr","sig","annotationsVisible","bytes","rawBytes","data","Array","readInt8","cpObj","newObject","publicOnly","fields","getFields","filter","f","isPublic","asyncForEach","nextItem","reflector","fieldObj","methods","getMethods","m","methodObj","ret","iclses","getAttributes","flatNames","concat","c","clsRef","push","getLoaderObject","areSystemAssertionsEnabled","java_lang_ClassLoader$NativeLibrary","isBuiltIn","java_lang_ClassLoader","arg1","arg2","arg3","arg4","offset","pd","source","defineClass","byteArray2Buffer","b","off","cdata","getResolvedClass","jvm","asd","directives","enabledAssertions","getEnabledAssertions","classEnabled","packages","packageEnabled","deflt","processAssertions","enabled","dotIndex","indexOf","slice","getDisabledAssertions","forEach","isArray","pkg","java_lang_Compiler","conversionBuffer","Buffer","java_lang_Double","num","writeDoubleLE","fromBits","readUInt32LE","writeInt32LE","getLowBits","getHighBits","readDoubleLE","java_lang_Float","writeFloatLE","readInt32LE","readFloatLE","java_lang_Object","clonedObj","newObjectFromClass","Object","keys","fieldName","getMonitor","notify","notifyAll","timeout","wait","fromTimer","toNumber","java_lang_Package","pkgNameObj","pkgName","pkgs","getPackages","pkgNames","java_lang_ProcessEnvironment","key","v","bArr","envArr","env","process","bytestr2Array","java_lang_reflect_Array","val","component","createWrapperObject","ccls","isSubclass","boxClassName","ccname","internal2external","e","throwException","jco","lens","typeStr","join","isInitialized","multiNewArray","java_lang_reflect_Proxy","cl","java_lang_Runtime","MAX_VALUE","setImmediate","java_lang_SecurityManager","getStackTrace","item","java_lang_Shutdown","halt","java_lang_StrictMath","d_val","Math","sin","cos","tan","asin","acos","atan","exp","log","LN10","sqrt","is_neg","pow","x","y","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","NaN","TWO_1023","negative","abs","atan2","base","sinh","expm1","java_lang_String","java_lang_System","stream","sys","getStaticFields","fromNumber","Date","getTime","multiply","src","srcPos","dest","destPos","srcClass","destClass","arraycopyNoCheck","srcCompCls","destCompCls","arraycopyCheck","props","properties","getSystemPropertyNames","propertyName","propertyVal","getSystemProperty","err","java_lang_Thread","getJVMObject","RUNNABLE","millis","beforeMethod","currentMethod","setTimeout","$thread","clearFlag","isInterrupted","setInterrupted","state","getStatus","TERMINATED","NEW","mon","getOwner","getThreadPool","getThreads","signalPriorityChange","throwInterruptedException","nativeThreadObj","BLOCKED","WAITING","TIMED_WAITING","monitor","getMonitorBlock","unblock","unwait","PARKED","getParker","completelyUnpark","threadCls","interruptMethods","methodLookup","stackTrace","java_lang_Throwable","dummy","stackTraceElementCls","stacktrace","cstack","pop","isNative","locals","sourceFile","sf","ln","isHidden","srcAttr","code","getCodeAttribute","table","filename","getLineNumber","pc","newElement","ext_classname","depth","java_lang_UNIXProcess","java_lang_invoke_MethodHandleNatives","self","clazz","clazzData","getMethodFromSlot","consObj","getFieldFromSlot","memberName","lookupClass","ALL_KINDS","methodTarget","signaturePolymorphicAwareMethodLookup","fieldTarget","fieldLookup","getConstructor","$staticFieldBase","defc","matchName","matchSig","matchFlags","skip","results","addMatch","matched","matchArray","SEARCH_SUPERCLASSES","SEARCH_INTERFACES","targetClass","fieldNum","args","constantsCls","constants","field","isFinal","fullName","mname","longCls","callSite","methodHandle","java_lang_invoke_MethodHandle","mh","argsBoxed","paramTypes","lmbdaForm","getTypes","shift","unboxArguments","registerNatives","java/lang/Class","java/lang/ClassLoader$NativeLibrary","java/lang/ClassLoader","java/lang/Compiler","java/lang/Double","java/lang/Float","java/lang/Object","java/lang/Package","java/lang/ProcessEnvironment","java/lang/reflect/Array","java/lang/reflect/Proxy","java/lang/Runtime","java/lang/SecurityManager","java/lang/Shutdown","java/lang/StrictMath","java/lang/String","java/lang/System","java/lang/Thread","java/lang/Throwable","java/lang/UNIXProcess","java/lang/invoke/MethodHandleNatives","java/lang/invoke/MethodHandle"],"mappings":"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","file":"java_lang.js","sourcesContent":["var Doppio = require('../doppiojvm');\nvar ReferenceClassData = Doppio.VM.ClassFile.ReferenceClassData;\nvar logging = Doppio.Debug.Logging;\nvar util = Doppio.VM.Util;\nvar ArrayClassData = Doppio.VM.ClassFile.ArrayClassData;\nvar ThreadStatus = Doppio.VM.Enums.ThreadStatus;\nvar Method = Doppio.VM.ClassFile.Method;\nvar Long = Doppio.VM.Long;\nvar assert = Doppio.Debug.Assert;\nvar PrimitiveClassData = Doppio.VM.ClassFile.PrimitiveClassData;\nvar MethodHandleReferenceKind = Doppio.VM.Enums.MethodHandleReferenceKind;\nvar debug = logging.debug;\nfunction arrayGet(thread, arr, idx) {\n    if (arr == null) {\n        thread.throwNewException('Ljava/lang/NullPointerException;', '');\n    } else {\n        var array = arr.array;\n        if (idx < 0 || idx >= array.length) {\n            thread.throwNewException('Ljava/lang/ArrayIndexOutOfBoundsException;', 'Tried to access an illegal index in an array.');\n        } else {\n            return array[idx];\n        }\n    }\n}\nfunction isNotNull(thread, obj) {\n    if (obj == null) {\n        thread.throwNewException('Ljava/lang/NullPointerException;', '');\n        return false;\n    } else {\n        return true;\n    }\n}\nfunction verifyArray(thread, obj) {\n    if (!(obj.getClass() instanceof ArrayClassData)) {\n        thread.throwNewException('Ljava/lang/IllegalArgumentException;', 'Object is not an array.');\n        return false;\n    } else {\n        return true;\n    }\n}\nvar java_lang_Class = function () {\n    function java_lang_Class() {\n    }\n    java_lang_Class['forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;'] = function (thread, jvmStr, initialize, jclo, caller) {\n        var classname = util.int_classname(jvmStr.toString());\n        if (!util.verify_int_classname(classname)) {\n            thread.throwNewException('Ljava/lang/ClassNotFoundException;', classname);\n        } else {\n            var loader = util.getLoader(thread, jclo);\n            thread.setStatus(ThreadStatus.ASYNC_WAITING);\n            if (initialize) {\n                loader.initializeClass(thread, classname, function (cls) {\n                    if (cls != null) {\n                        thread.asyncReturn(cls.getClassObject(thread));\n                    }\n                });\n            } else {\n                loader.resolveClass(thread, classname, function (cls) {\n                    if (cls != null) {\n                        thread.asyncReturn(cls.getClassObject(thread));\n                    }\n                });\n            }\n        }\n    };\n    java_lang_Class['isInstance(Ljava/lang/Object;)Z'] = function (thread, javaThis, obj) {\n        if (obj !== null) {\n            return obj.getClass().isCastable(javaThis.$cls);\n        } else {\n            return false;\n        }\n    };\n    java_lang_Class['isAssignableFrom(Ljava/lang/Class;)Z'] = function (thread, javaThis, cls) {\n        return cls.$cls.isCastable(javaThis.$cls);\n    };\n    java_lang_Class['isInterface()Z'] = function (thread, javaThis) {\n        if (!(javaThis.$cls instanceof ReferenceClassData)) {\n            return false;\n        }\n        return javaThis.$cls.accessFlags.isInterface();\n    };\n    java_lang_Class['isArray()Z'] = function (thread, javaThis) {\n        return javaThis.$cls instanceof ArrayClassData;\n    };\n    java_lang_Class['isPrimitive()Z'] = function (thread, javaThis) {\n        return javaThis.$cls instanceof PrimitiveClassData;\n    };\n    java_lang_Class['getName0()Ljava/lang/String;'] = function (thread, javaThis) {\n        return util.initString(thread.getBsCl(), javaThis.$cls.getExternalName());\n    };\n    java_lang_Class['getSuperclass()Ljava/lang/Class;'] = function (thread, javaThis) {\n        if (javaThis.$cls instanceof PrimitiveClassData) {\n            return null;\n        }\n        var cls = javaThis.$cls;\n        if (cls.accessFlags.isInterface() || cls.getSuperClass() == null) {\n            return null;\n        }\n        return cls.getSuperClass().getClassObject(thread);\n    };\n    java_lang_Class['getInterfaces0()[Ljava/lang/Class;'] = function (thread, javaThis) {\n        return util.newArrayFromData(thread, thread.getBsCl(), '[Ljava/lang/Class;', javaThis.$cls.getInterfaces().map(function (iface) {\n            return iface.getClassObject(thread);\n        }));\n    };\n    java_lang_Class['getComponentType()Ljava/lang/Class;'] = function (thread, javaThis) {\n        if (!(javaThis.$cls instanceof ArrayClassData)) {\n            return null;\n        }\n        return javaThis.$cls.getComponentClass().getClassObject(thread);\n    };\n    java_lang_Class['getModifiers()I'] = function (thread, javaThis) {\n        return javaThis.$cls.accessFlags.getRawByte();\n    };\n    java_lang_Class['getSigners()[Ljava/lang/Object;'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_Class['setSigners([Ljava/lang/Object;)V'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Class['getEnclosingMethod0()[Ljava/lang/Object;'] = function (thread, javaThis) {\n        var encDesc = null, enc_name = null, bsCl = thread.getBsCl();\n        if (javaThis.$cls instanceof ReferenceClassData) {\n            var cls = javaThis.$cls, em = cls.getAttribute('EnclosingMethod');\n            if (em == null) {\n                return null;\n            }\n            var rv = util.newArray(thread, bsCl, '[Ljava/lang/Object;', 3), encClassRef = em.encClass;\n            if (em.encMethod != null) {\n                rv.array[1] = util.initString(bsCl, em.encMethod.name);\n                rv.array[2] = util.initString(bsCl, em.encMethod.descriptor);\n            }\n            if (encClassRef.isResolved()) {\n                rv.array[0] = encClassRef.cls.getClassObject(thread);\n                return rv;\n            } else {\n                thread.setStatus(ThreadStatus.ASYNC_WAITING);\n                encClassRef.resolve(thread, cls.getLoader(), cls, function (status) {\n                    if (status) {\n                        rv.array[0] = encClassRef.cls.getClassObject(thread);\n                        thread.asyncReturn(rv);\n                    }\n                });\n            }\n        }\n        return null;\n    };\n    java_lang_Class['getDeclaringClass0()Ljava/lang/Class;'] = function (thread, javaThis) {\n        var declaringName, entry, name, i, len;\n        if (javaThis.$cls instanceof ReferenceClassData) {\n            var cls = javaThis.$cls, icls = cls.getAttribute('InnerClasses');\n            if (icls == null) {\n                return null;\n            }\n            var myClass = cls.getInternalName(), innerClassInfo = icls.classes;\n            for (i = 0, len = innerClassInfo.length; i < len; i++) {\n                entry = innerClassInfo[i];\n                if (entry.outerInfoIndex <= 0) {\n                    continue;\n                }\n                name = cls.constantPool.get(entry.innerInfoIndex).name;\n                if (name !== myClass) {\n                    continue;\n                }\n                declaringName = cls.constantPool.get(entry.outerInfoIndex);\n                if (declaringName.isResolved()) {\n                    return declaringName.cls.getClassObject(thread);\n                } else {\n                    thread.setStatus(ThreadStatus.ASYNC_WAITING);\n                    declaringName.resolve(thread, cls.getLoader(), cls, function (status) {\n                        if (status) {\n                            thread.asyncReturn(declaringName.cls.getClassObject(thread));\n                        }\n                    });\n                }\n            }\n        }\n        return null;\n    };\n    java_lang_Class['getProtectionDomain0()Ljava/security/ProtectionDomain;'] = function (thread, javaThis) {\n        return javaThis.$cls.getProtectionDomain();\n    };\n    java_lang_Class['getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;'] = function (thread, jvmStr) {\n        var type_desc = util.typestr2descriptor(jvmStr.toString()), prim_cls = thread.getBsCl().getInitializedClass(thread, type_desc);\n        return prim_cls.getClassObject(thread);\n    };\n    java_lang_Class['getGenericSignature0()Ljava/lang/String;'] = function (thread, javaThis) {\n        var cls = javaThis.$cls;\n        if (!util.is_primitive_type(cls.getInternalName())) {\n            var sigAttr = cls.getAttribute('Signature');\n            if (sigAttr != null && sigAttr.sig != null) {\n                return util.initString(thread.getBsCl(), sigAttr.sig);\n            }\n        }\n        return null;\n    };\n    java_lang_Class['getRawAnnotations()[B'] = function (thread, javaThis) {\n        var cls = javaThis.$cls, annotationsVisible = cls.getAttribute('RuntimeVisibleAnnotations'), methods, i, m;\n        if (annotationsVisible !== null) {\n            var bytes = annotationsVisible.rawBytes, data = new Array(bytes.length);\n            for (var i = 0; i < bytes.length; i++) {\n                data[i] = bytes.readInt8(i);\n            }\n            return util.newArrayFromData(thread, thread.getBsCl(), '[B', data);\n        }\n        return null;\n    };\n    java_lang_Class['getConstantPool()Lsun/reflect/ConstantPool;'] = function (thread, javaThis) {\n        var cls = javaThis.$cls, cpObj = util.newObject(thread, thread.getBsCl(), 'Lsun/reflect/ConstantPool;');\n        cpObj['sun/reflect/ConstantPool/constantPoolOop'] = cls.constantPool;\n        return cpObj;\n    };\n    java_lang_Class['getDeclaredFields0(Z)[Ljava/lang/reflect/Field;'] = function (thread, javaThis, publicOnly) {\n        var fields = javaThis.$cls.getFields();\n        if (publicOnly) {\n            fields = fields.filter(function (f) {\n                return f.accessFlags.isPublic();\n            });\n        }\n        var rv = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/reflect/Field;', fields.length), i = 0;\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        util.asyncForEach(fields, function (f, nextItem) {\n            f.reflector(thread, function (fieldObj) {\n                if (fieldObj !== null) {\n                    rv.array[i++] = fieldObj;\n                    nextItem();\n                }\n            });\n        }, function () {\n            thread.asyncReturn(rv);\n        });\n    };\n    java_lang_Class['getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;'] = function (thread, javaThis, publicOnly) {\n        var methods = javaThis.$cls.getMethods().filter(function (m) {\n                return m.name[0] !== '<' && (m.accessFlags.isPublic() || !publicOnly);\n            }), rv = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/reflect/Method;', methods.length), i = 0;\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        util.asyncForEach(methods, function (m, nextItem) {\n            m.reflector(thread, function (methodObj) {\n                if (methodObj !== null) {\n                    rv.array[i++] = methodObj;\n                    nextItem();\n                }\n            });\n        }, function () {\n            thread.asyncReturn(rv);\n        });\n    };\n    java_lang_Class['getDeclaredConstructors0(Z)[Ljava/lang/reflect/Constructor;'] = function (thread, javaThis, publicOnly) {\n        var methods = javaThis.$cls.getMethods().filter(function (m) {\n                return m.name === '<init>' && (!publicOnly || m.accessFlags.isPublic());\n            }), rv = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/reflect/Constructor;', methods.length), i = 0;\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        util.asyncForEach(methods, function (m, nextItem) {\n            m.reflector(thread, function (methodObj) {\n                if (methodObj !== null) {\n                    rv.array[i++] = methodObj;\n                    nextItem();\n                }\n            });\n        }, function () {\n            thread.asyncReturn(rv);\n        });\n    };\n    java_lang_Class['getDeclaredClasses0()[Ljava/lang/Class;'] = function (thread, javaThis) {\n        var ret = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/Class;', 0), cls = javaThis.$cls;\n        if (cls instanceof ReferenceClassData) {\n            var myClass = cls.getInternalName(), iclses = cls.getAttributes('InnerClasses'), flatNames = [];\n            if (iclses.length === 0) {\n                return ret;\n            }\n            for (var i = 0; i < iclses.length; i++) {\n                flatNames = flatNames.concat(iclses[i].classes.filter(function (c) {\n                    return c.outerInfoIndex > 0 && cls.constantPool.get(c.outerInfoIndex).name === myClass;\n                }).map(function (c) {\n                    return cls.constantPool.get(c.innerInfoIndex);\n                }));\n            }\n            thread.setStatus(ThreadStatus.ASYNC_WAITING);\n            util.asyncForEach(flatNames, function (clsRef, nextItem) {\n                if (clsRef.isResolved()) {\n                    ret.array.push(clsRef.cls.getClassObject(thread));\n                    nextItem();\n                } else {\n                    clsRef.resolve(thread, cls.getLoader(), javaThis.getClass(), function (status) {\n                        if (status) {\n                            ret.array.push(clsRef.cls.getClassObject(thread));\n                            nextItem();\n                        }\n                    });\n                }\n            }, function () {\n                return thread.asyncReturn(ret);\n            });\n        } else {\n            return ret;\n        }\n    };\n    java_lang_Class['desiredAssertionStatus0(Ljava/lang/Class;)Z'] = function (thread, arg0) {\n        if (arg0.$cls.getLoader().getLoaderObject() === null) {\n            return thread.getJVM().areSystemAssertionsEnabled();\n        }\n        return false;\n    };\n    return java_lang_Class;\n}();\nvar java_lang_ClassLoader$NativeLibrary = function () {\n    function java_lang_ClassLoader$NativeLibrary() {\n    }\n    java_lang_ClassLoader$NativeLibrary['load(Ljava/lang/String;Z)V'] = function (thread, javaThis, name, isBuiltIn) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_ClassLoader$NativeLibrary['find(Ljava/lang/String;)J'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_ClassLoader$NativeLibrary['unload(Ljava/lang/String;Z)V'] = function (thread, javaThis, name) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    return java_lang_ClassLoader$NativeLibrary;\n}();\nvar java_lang_ClassLoader = function () {\n    function java_lang_ClassLoader() {\n    }\n    java_lang_ClassLoader['defineClass0(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;'] = function (thread, javaThis, arg0, arg1, arg2, arg3, arg4) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_ClassLoader['defineClass1(Ljava/lang/String;[BIILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;'] = function (thread, javaThis, name, bytes, offset, len, pd, source) {\n        var loader = util.getLoader(thread, javaThis), type = util.int_classname(name.toString()), cls = loader.defineClass(thread, type, util.byteArray2Buffer(bytes.array, offset, len), pd);\n        if (cls == null) {\n            return null;\n        }\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        cls.resolve(thread, function (status) {\n            if (status !== null) {\n                thread.asyncReturn(cls.getClassObject(thread));\n            }\n        }, true);\n    };\n    java_lang_ClassLoader['defineClass2(Ljava/lang/String;Ljava/nio/ByteBuffer;IILjava/security/ProtectionDomain;Ljava/lang/String;)Ljava/lang/Class;'] = function (thread, javaThis, name, b, off, len, pd, source) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_ClassLoader['resolveClass0(Ljava/lang/Class;)V'] = function (thread, javaThis, cls) {\n        var loader = util.getLoader(thread, javaThis);\n        if (cls.$cls.isResolved()) {\n            return;\n        }\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        cls.$cls.resolve(thread, function (cdata) {\n            if (cdata !== null) {\n                thread.asyncReturn();\n            }\n        }, true);\n    };\n    java_lang_ClassLoader['findBootstrapClass(Ljava/lang/String;)Ljava/lang/Class;'] = function (thread, javaThis, name) {\n        var type = util.int_classname(name.toString());\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        thread.getBsCl().resolveClass(thread, type, function (cls) {\n            if (cls != null) {\n                thread.asyncReturn(cls.getClassObject(thread));\n            }\n        }, true);\n    };\n    java_lang_ClassLoader['findLoadedClass0(Ljava/lang/String;)Ljava/lang/Class;'] = function (thread, javaThis, name) {\n        var loader = util.getLoader(thread, javaThis), type = util.int_classname(name.toString()), cls = loader.getResolvedClass(type);\n        if (cls != null) {\n            return cls.getClassObject(thread);\n        } else {\n            return null;\n        }\n    };\n    java_lang_ClassLoader['retrieveDirectives()Ljava/lang/AssertionStatusDirectives;'] = function (thread) {\n        var jvm = thread.getJVM(), bsCl = thread.getBsCl();\n        thread.import('Ljava/lang/AssertionStatusDirectives;', function (asd) {\n            var directives = new asd();\n            var enabledAssertions = jvm.getEnabledAssertions();\n            var classes = [], classEnabled = [], packages = [], packageEnabled = [], deflt = false, processAssertions = function (enabled) {\n                    return function (name) {\n                        var dotIndex = name.indexOf('...');\n                        if (dotIndex === -1) {\n                            classes.push(name);\n                            classEnabled.push(enabled);\n                        } else {\n                            packages.push(name.slice(0, dotIndex));\n                            packageEnabled.push(enabled);\n                        }\n                    };\n                };\n            jvm.getDisabledAssertions().forEach(processAssertions(0));\n            if (typeof enabledAssertions === 'boolean') {\n                deflt = enabledAssertions;\n            } else if (Array.isArray(enabledAssertions)) {\n                enabledAssertions.forEach(processAssertions(1));\n            } else {\n                return thread.throwNewException('Ljava/lang/InternalError;', 'Expected enableAssertions option to be a boolean or an array of strings.');\n            }\n            directives['java/lang/AssertionStatusDirectives/classes'] = util.newArrayFromData(thread, bsCl, '[Ljava/lang/String;', classes.map(function (cls) {\n                return util.initString(bsCl, cls);\n            }));\n            directives['java/lang/AssertionStatusDirectives/classEnabled'] = util.newArrayFromData(thread, bsCl, '[Z', classEnabled);\n            directives['java/lang/AssertionStatusDirectives/packages'] = util.newArrayFromData(thread, bsCl, '[Ljava/lang/String;', packages.map(function (pkg) {\n                return util.initString(bsCl, pkg);\n            }));\n            directives['java/lang/AssertionStatusDirectives/packageEnabled'] = util.newArrayFromData(thread, bsCl, '[Z', packageEnabled);\n            directives['java/lang/AssertionStatusDirectives/deflt'] = enabledAssertions ? 1 : 0;\n            thread.asyncReturn(directives);\n        });\n    };\n    return java_lang_ClassLoader;\n}();\nvar java_lang_Compiler = function () {\n    function java_lang_Compiler() {\n    }\n    java_lang_Compiler['initialize()V'] = function (thread) {\n    };\n    java_lang_Compiler['registerNatives()V'] = function (thread) {\n    };\n    java_lang_Compiler['compileClass(Ljava/lang/Class;)Z'] = function (thread, arg0) {\n        return 0;\n    };\n    java_lang_Compiler['compileClasses(Ljava/lang/String;)Z'] = function (thread, arg0) {\n        return 0;\n    };\n    java_lang_Compiler['command(Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, arg0) {\n        return null;\n    };\n    java_lang_Compiler['enable()V'] = function (thread) {\n    };\n    java_lang_Compiler['disable()V'] = function (thread) {\n    };\n    return java_lang_Compiler;\n}();\nvar conversionBuffer = new Buffer(8);\nvar java_lang_Double = function () {\n    function java_lang_Double() {\n    }\n    java_lang_Double['doubleToRawLongBits(D)J'] = function (thread, num) {\n        conversionBuffer.writeDoubleLE(num, 0);\n        return Long.fromBits(conversionBuffer.readUInt32LE(0), conversionBuffer.readUInt32LE(4));\n    };\n    java_lang_Double['longBitsToDouble(J)D'] = function (thread, num) {\n        conversionBuffer.writeInt32LE(num.getLowBits(), 0);\n        conversionBuffer.writeInt32LE(num.getHighBits(), 4);\n        return conversionBuffer.readDoubleLE(0);\n    };\n    return java_lang_Double;\n}();\nvar java_lang_Float = function () {\n    function java_lang_Float() {\n    }\n    java_lang_Float['floatToRawIntBits(F)I'] = function (thread, num) {\n        conversionBuffer.writeFloatLE(num, 0);\n        return conversionBuffer.readInt32LE(0);\n    };\n    java_lang_Float['intBitsToFloat(I)F'] = function (thread, num) {\n        conversionBuffer.writeInt32LE(num, 0);\n        return conversionBuffer.readFloatLE(0);\n    };\n    return java_lang_Float;\n}();\nvar java_lang_Object = function () {\n    function java_lang_Object() {\n    }\n    java_lang_Object['getClass()Ljava/lang/Class;'] = function (thread, javaThis) {\n        return javaThis.getClass().getClassObject(thread);\n    };\n    java_lang_Object['hashCode()I'] = function (thread, javaThis) {\n        return javaThis.ref;\n    };\n    java_lang_Object['clone()Ljava/lang/Object;'] = function (thread, javaThis) {\n        var cls = javaThis.getClass();\n        if (cls.getInternalName()[0] === '[') {\n            return javaThis.slice(0);\n        } else {\n            var clonedObj = util.newObjectFromClass(thread, javaThis.getClass());\n            Object.keys(javaThis).forEach(function (fieldName) {\n                clonedObj[fieldName] = javaThis[fieldName];\n            });\n            return clonedObj;\n        }\n    };\n    java_lang_Object['notify()V'] = function (thread, javaThis) {\n        ;\n        javaThis.getMonitor().notify(thread);\n    };\n    java_lang_Object['notifyAll()V'] = function (thread, javaThis) {\n        ;\n        javaThis.getMonitor().notifyAll(thread);\n    };\n    java_lang_Object['wait(J)V'] = function (thread, javaThis, timeout) {\n        ;\n        javaThis.getMonitor().wait(thread, function (fromTimer) {\n            thread.asyncReturn();\n        }, timeout.toNumber());\n    };\n    return java_lang_Object;\n}();\nvar java_lang_Package = function () {\n    function java_lang_Package() {\n    }\n    java_lang_Package['getSystemPackage0(Ljava/lang/String;)Ljava/lang/String;'] = function (thread, pkgNameObj) {\n        var pkgName = pkgNameObj.toString();\n        pkgName = pkgName.slice(0, pkgName.length - 1);\n        var pkgs = thread.getBsCl().getPackages();\n        for (var i = 0; i < pkgs.length; i++) {\n            if (pkgs[i][0] === pkgName) {\n                return util.initString(thread.getBsCl(), pkgs[i][1][0]);\n            }\n        }\n        return null;\n    };\n    java_lang_Package['getSystemPackages0()[Ljava/lang/String;'] = function (thread) {\n        var pkgNames = thread.getBsCl().getPackages();\n        return util.newArrayFromData(thread, thread.getBsCl(), '[Ljava/lang/String;', pkgNames.map(function (pkgName) {\n            return util.initString(thread.getBsCl(), pkgName[0] + '/');\n        }));\n    };\n    return java_lang_Package;\n}();\nvar java_lang_ProcessEnvironment = function () {\n    function java_lang_ProcessEnvironment() {\n    }\n    java_lang_ProcessEnvironment['environ()[[B'] = function (thread) {\n        var envArr = util.newArray(thread, thread.getBsCl(), '[[B', 0), env = process.env, key, v, bArr;\n        for (key in env) {\n            v = env[key];\n            bArr = util.newArray(thread, thread.getBsCl(), '[B', 0);\n            bArr.array = util.bytestr2Array(key);\n            envArr.array.push(bArr);\n            bArr = util.newArray(thread, thread.getBsCl(), '[B', 0);\n            bArr.array = util.bytestr2Array(v);\n            envArr.array.push(bArr);\n        }\n        return envArr;\n    };\n    return java_lang_ProcessEnvironment;\n}();\nvar java_lang_reflect_Array = function () {\n    function java_lang_reflect_Array() {\n    }\n    java_lang_reflect_Array['getLength(Ljava/lang/Object;)I'] = function (thread, arr) {\n        if (verifyArray(thread, arr)) {\n            if (isNotNull(thread, arr)) {\n                return arr.array.length;\n            }\n        }\n    };\n    java_lang_reflect_Array['get(Ljava/lang/Object;I)Ljava/lang/Object;'] = function (thread, arr, idx) {\n        var val = arrayGet(thread, arr, idx);\n        if (val != null) {\n            var component = arr.getClass().getComponentClass();\n            if (util.is_primitive_type(component.getInternalName())) {\n                return component.createWrapperObject(thread, val);\n            }\n        }\n        return val;\n    };\n    java_lang_reflect_Array['set(Ljava/lang/Object;ILjava/lang/Object;)V'] = function (thread, arr, idx, val) {\n        if (verifyArray(thread, arr) && isNotNull(thread, arr)) {\n            if (idx < 0 || idx >= arr.array.length) {\n                thread.throwNewException('Ljava/lang/ArrayIndexOutOfBoundsException;', 'Tried to write to an illegal index in an array.');\n            } else {\n                var ccls = arr.getClass().getComponentClass();\n                if (ccls instanceof PrimitiveClassData) {\n                    if (val.getClass().isSubclass(thread.getBsCl().getInitializedClass(thread, ccls.boxClassName()))) {\n                        var ccname = ccls.getInternalName();\n                        val[util.internal2external[ccname] + 'Value()' + ccname](thread, null, function (e, rv) {\n                            if (e) {\n                                thread.throwException(e);\n                            } else {\n                                arr.array[idx] = rv;\n                                thread.asyncReturn();\n                            }\n                        });\n                    } else {\n                        thread.throwNewException('Ljava/lang/IllegalArgumentException;', 'argument type mismatch');\n                    }\n                } else if (val.getClass().isSubclass(ccls)) {\n                    arr.array[idx] = val;\n                } else {\n                    thread.throwNewException('Ljava/lang/IllegalArgumentException;', 'argument type mismatch');\n                }\n            }\n        }\n    };\n    java_lang_reflect_Array['setBoolean(Ljava/lang/Object;IZ)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setByte(Ljava/lang/Object;IB)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setChar(Ljava/lang/Object;IC)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setShort(Ljava/lang/Object;IS)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setInt(Ljava/lang/Object;II)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setLong(Ljava/lang/Object;IJ)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setFloat(Ljava/lang/Object;IF)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['setDouble(Ljava/lang/Object;ID)V'] = function (thread, arg0, arg1, arg2) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_reflect_Array['newArray(Ljava/lang/Class;I)Ljava/lang/Object;'] = function (thread, cls, len) {\n        return util.newArray(thread, cls.$cls.getLoader(), '[' + cls.$cls.getInternalName(), len);\n    };\n    java_lang_reflect_Array['multiNewArray(Ljava/lang/Class;[I)Ljava/lang/Object;'] = function (thread, jco, lens) {\n        var typeStr = new Array(lens.array.length + 1).join('[') + jco.$cls.getInternalName();\n        if (jco.$cls.isInitialized(thread)) {\n            return util.multiNewArray(thread, jco.$cls.getLoader(), typeStr, lens.array);\n        } else {\n            thread.setStatus(ThreadStatus.ASYNC_WAITING);\n            jco.$cls.initialize(thread, function (cls) {\n                thread.asyncReturn(util.multiNewArray(thread, jco.$cls.getLoader(), typeStr, lens.array));\n            });\n        }\n    };\n    java_lang_reflect_Array['getBoolean(Ljava/lang/Object;I)Z'] = arrayGet;\n    java_lang_reflect_Array['getByte(Ljava/lang/Object;I)B'] = arrayGet;\n    java_lang_reflect_Array['getChar(Ljava/lang/Object;I)C'] = arrayGet;\n    java_lang_reflect_Array['getShort(Ljava/lang/Object;I)S'] = arrayGet;\n    java_lang_reflect_Array['getInt(Ljava/lang/Object;I)I'] = arrayGet;\n    java_lang_reflect_Array['getLong(Ljava/lang/Object;I)J'] = arrayGet;\n    java_lang_reflect_Array['getFloat(Ljava/lang/Object;I)F'] = arrayGet;\n    java_lang_reflect_Array['getDouble(Ljava/lang/Object;I)D'] = arrayGet;\n    return java_lang_reflect_Array;\n}();\nvar java_lang_reflect_Proxy = function () {\n    function java_lang_reflect_Proxy() {\n    }\n    java_lang_reflect_Proxy['defineClass0(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;'] = function (thread, cl, name, bytes, offset, len) {\n        var loader = util.getLoader(thread, cl), cls = loader.defineClass(thread, util.int_classname(name.toString()), util.byteArray2Buffer(bytes.array, offset, len), null);\n        if (cls != null) {\n            return cls.getClassObject(thread);\n        }\n    };\n    return java_lang_reflect_Proxy;\n}();\nvar java_lang_Runtime = function () {\n    function java_lang_Runtime() {\n    }\n    java_lang_Runtime['availableProcessors()I'] = function (thread, javaThis) {\n        return 1;\n    };\n    java_lang_Runtime['freeMemory()J'] = function (thread, javaThis) {\n        return Long.MAX_VALUE;\n    };\n    java_lang_Runtime['totalMemory()J'] = function (thread, javaThis) {\n        return Long.MAX_VALUE;\n    };\n    java_lang_Runtime['maxMemory()J'] = function (thread, javaThis) {\n        return Long.MAX_VALUE;\n    };\n    java_lang_Runtime['gc()V'] = function (thread, javaThis) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        setImmediate(function () {\n            thread.asyncReturn();\n        });\n    };\n    java_lang_Runtime['runFinalization0()V'] = function (thread) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Runtime['traceInstructions(Z)V'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Runtime['traceMethodCalls(Z)V'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    return java_lang_Runtime;\n}();\nvar java_lang_SecurityManager = function () {\n    function java_lang_SecurityManager() {\n    }\n    java_lang_SecurityManager['getClassContext()[Ljava/lang/Class;'] = function (thread, javaThis) {\n        return util.newArrayFromData(thread, thread.getBsCl(), '[Ljava/lang/Class;', thread.getStackTrace().map(function (item) {\n            return item.method.cls.getClassObject(thread);\n        }));\n        ;\n    };\n    java_lang_SecurityManager['currentClassLoader0()Ljava/lang/ClassLoader;'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_SecurityManager['classDepth(Ljava/lang/String;)I'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_lang_SecurityManager['classLoaderDepth0()I'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_lang_SecurityManager['currentLoadedClass0()Ljava/lang/Class;'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    return java_lang_SecurityManager;\n}();\nvar java_lang_Shutdown = function () {\n    function java_lang_Shutdown() {\n    }\n    java_lang_Shutdown['halt0(I)V'] = function (thread, status) {\n        thread.getJVM().halt(status);\n    };\n    java_lang_Shutdown['runAllFinalizers()V'] = function (thread) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    return java_lang_Shutdown;\n}();\nvar java_lang_StrictMath = function () {\n    function java_lang_StrictMath() {\n    }\n    java_lang_StrictMath['sin(D)D'] = function (thread, d_val) {\n        return Math.sin(d_val);\n    };\n    java_lang_StrictMath['cos(D)D'] = function (thread, d_val) {\n        return Math.cos(d_val);\n    };\n    java_lang_StrictMath['tan(D)D'] = function (thread, d_val) {\n        return Math.tan(d_val);\n    };\n    java_lang_StrictMath['asin(D)D'] = function (thread, d_val) {\n        return Math.asin(d_val);\n    };\n    java_lang_StrictMath['acos(D)D'] = function (thread, d_val) {\n        return Math.acos(d_val);\n    };\n    java_lang_StrictMath['atan(D)D'] = function (thread, d_val) {\n        return Math.atan(d_val);\n    };\n    java_lang_StrictMath['exp(D)D'] = function (thread, d_val) {\n        return Math.exp(d_val);\n    };\n    java_lang_StrictMath['log(D)D'] = function (thread, d_val) {\n        return Math.log(d_val);\n    };\n    java_lang_StrictMath['log10(D)D'] = function (thread, d_val) {\n        return Math.log(d_val) / Math.LN10;\n    };\n    java_lang_StrictMath['sqrt(D)D'] = function (thread, d_val) {\n        return Math.sqrt(d_val);\n    };\n    java_lang_StrictMath['cbrt(D)D'] = function (thread, d_val) {\n        var is_neg = d_val < 0;\n        if (is_neg) {\n            return -Math.pow(-d_val, 1 / 3);\n        } else {\n            return Math.pow(d_val, 1 / 3);\n        }\n    };\n    java_lang_StrictMath['IEEEremainder(DD)D'] = function (thread, x, y) {\n        if (x == Number.NEGATIVE_INFINITY || !(x < Number.POSITIVE_INFINITY) || y == 0 || y != y)\n            return Number.NaN;\n        var TWO_1023 = 8.98846567431158e+307;\n        var negative = x < 0;\n        x = Math.abs(x);\n        y = Math.abs(y);\n        if (x == y || x == 0)\n            return 0 * x;\n        if (y < TWO_1023)\n            x %= y + y;\n        if (y < 4 / TWO_1023) {\n            if (x + x > y) {\n                x -= y;\n                if (x + x >= y)\n                    x -= y;\n            }\n        } else {\n            y *= 0.5;\n            if (x > y) {\n                x -= y;\n                if (x >= y)\n                    x -= y;\n            }\n        }\n        return negative ? -x : x;\n    };\n    java_lang_StrictMath['atan2(DD)D'] = function (thread, y, x) {\n        return Math.atan2(y, x);\n    };\n    java_lang_StrictMath['pow(DD)D'] = function (thread, base, exp) {\n        return Math.pow(base, exp);\n    };\n    java_lang_StrictMath['sinh(D)D'] = function (thread, d_val) {\n        return Math.sinh(d_val);\n    };\n    java_lang_StrictMath['cosh(D)D'] = function (thread, d_val) {\n        var exp = Math.exp(d_val);\n        return (exp + 1 / exp) / 2;\n    };\n    java_lang_StrictMath['tanh(D)D'] = function (thread, d_val) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_lang_StrictMath['hypot(DD)D'] = function (thread, arg0, arg1) {\n        return Math.sqrt(Math.pow(arg0, 2) + Math.pow(arg1, 2));\n    };\n    java_lang_StrictMath['expm1(D)D'] = function (thread, d_val) {\n        return Math.expm1(d_val);\n    };\n    java_lang_StrictMath['log1p(D)D'] = function (thread, d_val) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    return java_lang_StrictMath;\n}();\nvar java_lang_String = function () {\n    function java_lang_String() {\n    }\n    java_lang_String['intern()Ljava/lang/String;'] = function (thread, javaThis) {\n        return thread.getJVM().internString(javaThis.toString(), javaThis);\n    };\n    return java_lang_String;\n}();\nvar java_lang_System = function () {\n    function java_lang_System() {\n    }\n    java_lang_System['setIn0(Ljava/io/InputStream;)V'] = function (thread, stream) {\n        var sys = util.getStaticFields(thread, thread.getBsCl(), 'Ljava/lang/System;');\n        sys['java/lang/System/in'] = stream;\n    };\n    java_lang_System['setOut0(Ljava/io/PrintStream;)V'] = function (thread, stream) {\n        var sys = util.getStaticFields(thread, thread.getBsCl(), 'Ljava/lang/System;');\n        sys['java/lang/System/out'] = stream;\n    };\n    java_lang_System['setErr0(Ljava/io/PrintStream;)V'] = function (thread, stream) {\n        var sys = util.getStaticFields(thread, thread.getBsCl(), 'Ljava/lang/System;');\n        sys['java/lang/System/err'] = stream;\n    };\n    java_lang_System['currentTimeMillis()J'] = function (thread) {\n        return Long.fromNumber(new Date().getTime());\n    };\n    java_lang_System['nanoTime()J'] = function (thread) {\n        return Long.fromNumber(new Date().getTime()).multiply(Long.fromNumber(1000000));\n    };\n    java_lang_System['arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V'] = function (thread, src, srcPos, dest, destPos, length) {\n        if (src == null || dest == null) {\n            thread.throwNewException('Ljava/lang/NullPointerException;', 'Cannot copy to/from a null array.');\n        } else if (!(src.getClass() instanceof ArrayClassData) || !(dest.getClass() instanceof ArrayClassData)) {\n            thread.throwNewException('Ljava/lang/ArrayStoreException;', 'src and dest arguments must be of array type.');\n        } else if (srcPos < 0 || srcPos + length > src.array.length || destPos < 0 || destPos + length > dest.array.length || length < 0) {\n            thread.throwNewException('Ljava/lang/ArrayIndexOutOfBoundsException;', 'Tried to write to an illegal index in an array.');\n        } else {\n            var srcClass = src.getClass(), destClass = dest.getClass();\n            if (src === dest) {\n                src = dest.slice(srcPos, srcPos + length);\n                srcPos = 0;\n            }\n            if (srcClass.isCastable(destClass)) {\n                util.arraycopyNoCheck(src, srcPos, dest, destPos, length);\n            } else {\n                var srcCompCls = src.getClass().getComponentClass(), destCompCls = dest.getClass().getComponentClass();\n                if (srcCompCls instanceof PrimitiveClassData || destCompCls instanceof PrimitiveClassData) {\n                    thread.throwNewException('Ljava/lang/ArrayStoreException;', 'If calling arraycopy with a primitive array, both src and dest must be of the same primitive type.');\n                } else {\n                    util.arraycopyCheck(thread, src, srcPos, dest, destPos, length);\n                }\n            }\n        }\n    };\n    java_lang_System['identityHashCode(Ljava/lang/Object;)I'] = function (thread, x) {\n        if (x != null && x.ref != null) {\n            return x.ref;\n        }\n        return 0;\n    };\n    java_lang_System['initProperties(Ljava/util/Properties;)Ljava/util/Properties;'] = function (thread, props) {\n        var jvm = thread.getJVM(), properties = jvm.getSystemPropertyNames();\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        util.asyncForEach(properties, function (propertyName, nextItem) {\n            var propertyVal = jvm.getSystemProperty(propertyName);\n            props['setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;'](thread, [\n                jvm.internString(propertyName),\n                jvm.internString(propertyVal)\n            ], nextItem);\n        }, function (err) {\n            if (err) {\n                thread.throwException(err);\n            } else {\n                thread.asyncReturn(props);\n            }\n        });\n    };\n    java_lang_System['mapLibraryName(Ljava/lang/String;)Ljava/lang/String;'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    return java_lang_System;\n}();\nvar java_lang_Thread = function () {\n    function java_lang_Thread() {\n    }\n    java_lang_Thread['currentThread()Ljava/lang/Thread;'] = function (thread) {\n        return thread.getJVMObject();\n    };\n    java_lang_Thread['yield()V'] = function (thread) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        setImmediate(function () {\n            thread.setStatus(ThreadStatus.RUNNABLE);\n            thread.asyncReturn();\n        });\n    };\n    java_lang_Thread['sleep(J)V'] = function (thread, millis) {\n        var beforeMethod = thread.currentMethod();\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        setTimeout(function () {\n            if (beforeMethod === thread.currentMethod()) {\n                thread.setStatus(ThreadStatus.RUNNABLE);\n                thread.asyncReturn();\n            }\n        }, millis.toNumber());\n    };\n    java_lang_Thread['start0()V'] = function (thread, javaThis) {\n        javaThis['run()V'](javaThis.$thread, null);\n    };\n    java_lang_Thread['setNativeName(Ljava/lang/String;)V'] = function (thread, javaThis, name) {\n    };\n    java_lang_Thread['isInterrupted(Z)Z'] = function (thread, javaThis, clearFlag) {\n        var isInterrupted = javaThis.$thread.isInterrupted();\n        if (clearFlag) {\n            javaThis.$thread.setInterrupted(false);\n        }\n        return isInterrupted;\n    };\n    java_lang_Thread['isAlive()Z'] = function (thread, javaThis) {\n        var state = javaThis.$thread.getStatus();\n        return state !== ThreadStatus.TERMINATED && state !== ThreadStatus.NEW;\n    };\n    java_lang_Thread['countStackFrames()I'] = function (thread, javaThis) {\n        return javaThis.$thread.getStackTrace().length;\n    };\n    java_lang_Thread['holdsLock(Ljava/lang/Object;)Z'] = function (thread, obj) {\n        var mon = obj.getMonitor();\n        return mon.getOwner() === thread;\n    };\n    java_lang_Thread['dumpThreads([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return null;\n    };\n    java_lang_Thread['getThreads()[Ljava/lang/Thread;'] = function (thread) {\n        return util.newArrayFromData(thread, thread.getBsCl(), '[Ljava/lang/Thread;', thread.getThreadPool().getThreads().map(function (thread) {\n            return thread.getJVMObject();\n        }));\n    };\n    java_lang_Thread['setPriority0(I)V'] = function (thread, javaThis, arg0) {\n        thread.signalPriorityChange();\n    };\n    java_lang_Thread['stop0(Ljava/lang/Object;)V'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Thread['suspend0()V'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Thread['resume0()V'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_Thread['interrupt0()V'] = function (thread, javaThis) {\n        function throwInterruptedException() {\n            javaThis.$thread.throwNewException('Ljava/lang/InterruptedException;', 'interrupt0 called');\n        }\n        var nativeThreadObj = javaThis.$thread;\n        javaThis['checkAccess()V'](thread, null, function (e) {\n            if (e) {\n                thread.throwException(e);\n            } else {\n                var status = nativeThreadObj.getStatus();\n                switch (status) {\n                case ThreadStatus.NEW:\n                case ThreadStatus.TERMINATED:\n                    return thread.asyncReturn();\n                case ThreadStatus.BLOCKED:\n                case ThreadStatus.WAITING:\n                case ThreadStatus.TIMED_WAITING:\n                    nativeThreadObj.setInterrupted(false);\n                    var monitor = nativeThreadObj.getMonitorBlock();\n                    if (status === ThreadStatus.BLOCKED) {\n                        monitor.unblock(nativeThreadObj, true);\n                        throwInterruptedException();\n                    } else {\n                        monitor.unwait(nativeThreadObj, false, true, throwInterruptedException);\n                    }\n                    return thread.asyncReturn();\n                case ThreadStatus.PARKED:\n                    thread.getJVM().getParker().completelyUnpark(nativeThreadObj);\n                default:\n                    var threadCls = thread.getBsCl().getInitializedClass(thread, 'Ljava/lang/Thread;'), interruptMethods = [\n                            threadCls.methodLookup('join()V'),\n                            threadCls.methodLookup('join(J)V'),\n                            threadCls.methodLookup('join(JI)V'),\n                            threadCls.methodLookup('sleep(J)V'),\n                            threadCls.methodLookup('sleep(JI)V')\n                        ], stackTrace = nativeThreadObj.getStackTrace(), currentMethod = stackTrace[stackTrace.length - 1].method;\n                    if (interruptMethods.indexOf(currentMethod) !== -1) {\n                        nativeThreadObj.setInterrupted(false);\n                        nativeThreadObj.throwNewException('Ljava/lang/InterruptedException;', 'interrupt0 called');\n                    } else {\n                        nativeThreadObj.setInterrupted(true);\n                    }\n                    return thread.asyncReturn();\n                }\n            }\n        });\n    };\n    return java_lang_Thread;\n}();\nvar java_lang_Throwable = function () {\n    function java_lang_Throwable() {\n    }\n    java_lang_Throwable['fillInStackTrace(I)Ljava/lang/Throwable;'] = function (thread, javaThis, dummy) {\n        var stackTraceElementCls = thread.getBsCl().getInitializedClass(thread, 'Ljava/lang/StackTraceElement;'), stacktrace = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/StackTraceElement;', 0), cstack = thread.getStackTrace(), i, j, bsCl = thread.getBsCl();\n        cstack.pop();\n        while (cstack.length > 0 && !cstack[cstack.length - 1].method.accessFlags.isNative() && cstack[cstack.length - 1].locals[0] === javaThis) {\n            cstack.pop();\n        }\n        for (i = cstack.length - 1; i >= 0; i--) {\n            var sf = cstack[i], cls = sf.method.cls, ln = -1, sourceFile;\n            if (sf.method.isHidden()) {\n                continue;\n            }\n            if (sf.method.accessFlags.isNative()) {\n                sourceFile = 'Native Method';\n            } else {\n                var srcAttr = cls.getAttribute('SourceFile'), code = sf.method.getCodeAttribute(), table = code.getAttribute('LineNumberTable');\n                sourceFile = srcAttr != null ? srcAttr.filename : 'unknown';\n                if (table != null) {\n                    ln = table.getLineNumber(sf.pc);\n                } else {\n                    ln = -1;\n                }\n            }\n            var newElement = util.newObjectFromClass(thread, stackTraceElementCls);\n            newElement['java/lang/StackTraceElement/declaringClass'] = util.initString(bsCl, util.ext_classname(cls.getInternalName()));\n            newElement['java/lang/StackTraceElement/methodName'] = util.initString(bsCl, sf.method.name != null ? sf.method.name : 'unknown');\n            newElement['java/lang/StackTraceElement/fileName'] = util.initString(bsCl, sourceFile);\n            newElement['java/lang/StackTraceElement/lineNumber'] = ln;\n            stacktrace.array.push(newElement);\n        }\n        javaThis['java/lang/Throwable/backtrace'] = stacktrace;\n        return javaThis;\n    };\n    java_lang_Throwable['getStackTraceDepth()I'] = function (thread, javaThis) {\n        return javaThis['java/lang/Throwable/backtrace'].array.length;\n    };\n    java_lang_Throwable['getStackTraceElement(I)Ljava/lang/StackTraceElement;'] = function (thread, javaThis, depth) {\n        return javaThis['java/lang/Throwable/backtrace'].array[depth];\n    };\n    return java_lang_Throwable;\n}();\nvar java_lang_UNIXProcess = function () {\n    function java_lang_UNIXProcess() {\n    }\n    java_lang_UNIXProcess['waitForProcessExit(I)I'] = function (thread, javaThis, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n        return 0;\n    };\n    java_lang_UNIXProcess['forkAndExec(I[B[B[BI[BI[B[IZ)I'] = function (thread, javaThis) {\n        thread.throwNewException('Ljava/lang/Error;', 'Doppio doesn\\'t support forking processes.');\n    };\n    java_lang_UNIXProcess['destroyProcess(IZ)V'] = function (thread, arg0) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    java_lang_UNIXProcess['init()V'] = function (thread) {\n        thread.throwNewException('Ljava/lang/UnsatisfiedLinkError;', 'Native method not implemented.');\n    };\n    return java_lang_UNIXProcess;\n}();\nvar MemberNameConstants;\n(function (MemberNameConstants) {\n    MemberNameConstants[MemberNameConstants['IS_METHOD'] = 65536] = 'IS_METHOD';\n    MemberNameConstants[MemberNameConstants['IS_CONSTRUCTOR'] = 131072] = 'IS_CONSTRUCTOR';\n    MemberNameConstants[MemberNameConstants['IS_FIELD'] = 262144] = 'IS_FIELD';\n    MemberNameConstants[MemberNameConstants['IS_TYPE'] = 524288] = 'IS_TYPE';\n    MemberNameConstants[MemberNameConstants['CALLER_SENSITIVE'] = 1048576] = 'CALLER_SENSITIVE';\n    MemberNameConstants[MemberNameConstants['SEARCH_SUPERCLASSES'] = 1048576] = 'SEARCH_SUPERCLASSES';\n    MemberNameConstants[MemberNameConstants['SEARCH_INTERFACES'] = 2097152] = 'SEARCH_INTERFACES';\n    MemberNameConstants[MemberNameConstants['REFERENCE_KIND_SHIFT'] = 24] = 'REFERENCE_KIND_SHIFT';\n    MemberNameConstants[MemberNameConstants['ALL_KINDS'] = 983040] = 'ALL_KINDS';\n}(MemberNameConstants || (MemberNameConstants = {})));\nfunction initializeMemberName(thread, mn, ref) {\n    var flags = mn['java/lang/invoke/MemberName/flags'], type = mn['java/lang/invoke/MemberName/type'], name = mn['java/lang/invoke/MemberName/name'], refKind, existingRefKind = flags >>> MemberNameConstants.REFERENCE_KIND_SHIFT;\n    if (ref instanceof Method) {\n        flags = MemberNameConstants.IS_METHOD;\n        if (ref.cls.accessFlags.isInterface()) {\n            refKind = MethodHandleReferenceKind.INVOKEINTERFACE;\n        } else if (ref.accessFlags.isStatic()) {\n            refKind = MethodHandleReferenceKind.INVOKESTATIC;\n        } else if (ref.name[0] === '<') {\n            flags = MemberNameConstants.IS_CONSTRUCTOR;\n            refKind = MethodHandleReferenceKind.INVOKESPECIAL;\n        } else {\n            refKind = MethodHandleReferenceKind.INVOKEVIRTUAL;\n        }\n        mn.vmtarget = ref.getVMTargetBridgeMethod(thread, existingRefKind ? existingRefKind : refKind);\n        if (refKind === MethodHandleReferenceKind.INVOKEINTERFACE || refKind === MethodHandleReferenceKind.INVOKEVIRTUAL) {\n            mn.vmindex = ref.cls.getVMIndexForMethod(ref);\n        }\n        flags |= refKind << MemberNameConstants.REFERENCE_KIND_SHIFT | methodFlags(ref);\n    } else {\n        flags = MemberNameConstants.IS_FIELD;\n        if (ref.accessFlags.isStatic()) {\n            refKind = MethodHandleReferenceKind.GETSTATIC;\n        } else {\n            refKind = MethodHandleReferenceKind.GETFIELD;\n        }\n        mn.vmindex = ref.cls.getVMIndexForField(ref);\n        flags |= refKind << MemberNameConstants.REFERENCE_KIND_SHIFT | ref.accessFlags.getRawByte();\n    }\n    if (type === null) {\n        type = thread.getJVM().internString(ref.rawDescriptor);\n    }\n    if (name === null) {\n        name = thread.getJVM().internString(ref.name);\n    }\n    mn['java/lang/invoke/MemberName/clazz'] = ref.cls.getClassObject(thread);\n    mn['java/lang/invoke/MemberName/flags'] = flags;\n    mn['java/lang/invoke/MemberName/type'] = type;\n    mn['java/lang/invoke/MemberName/name'] = name;\n}\nfunction methodFlags(method) {\n    var flags = method.accessFlags.getRawByte();\n    if (method.isCallerSensitive()) {\n        flags |= MemberNameConstants.CALLER_SENSITIVE;\n    }\n    return flags;\n}\nvar java_lang_invoke_MethodHandleNatives = function () {\n    function java_lang_invoke_MethodHandleNatives() {\n    }\n    java_lang_invoke_MethodHandleNatives['init(Ljava/lang/invoke/MemberName;Ljava/lang/Object;)V'] = function (thread, self, ref) {\n        var clazz, clazzData, flags, m, f;\n        switch (ref.getClass().getInternalName()) {\n        case 'Ljava/lang/reflect/Method;':\n            var methodObj = ref, refKind;\n            clazz = methodObj['java/lang/reflect/Method/clazz'];\n            clazzData = clazz.$cls;\n            m = clazzData.getMethodFromSlot(methodObj['java/lang/reflect/Method/slot']);\n            flags = methodFlags(m) | MemberNameConstants.IS_METHOD;\n            if (m.accessFlags.isStatic()) {\n                refKind = MethodHandleReferenceKind.INVOKESTATIC;\n            } else if (clazzData.accessFlags.isInterface()) {\n                refKind = MethodHandleReferenceKind.INVOKEINTERFACE;\n            } else {\n                refKind = MethodHandleReferenceKind.INVOKEVIRTUAL;\n            }\n            flags |= refKind << MemberNameConstants.REFERENCE_KIND_SHIFT;\n            self['java/lang/invoke/MemberName/clazz'] = clazz;\n            self['java/lang/invoke/MemberName/flags'] = flags;\n            self.vmtarget = m.getVMTargetBridgeMethod(thread, refKind);\n            if (refKind === MethodHandleReferenceKind.INVOKEVIRTUAL || refKind === MethodHandleReferenceKind.INVOKEINTERFACE) {\n                self.vmindex = clazzData.getVMIndexForMethod(m);\n            }\n            break;\n        case 'Ljava/lang/reflect/Constructor;':\n            var consObj = ref;\n            clazz = consObj['java/lang/reflect/Constructor/clazz'];\n            clazzData = clazz.$cls;\n            m = clazzData.getMethodFromSlot(consObj['java/lang/reflect/Constructor/slot']);\n            flags = methodFlags(m) | MemberNameConstants.IS_CONSTRUCTOR | MethodHandleReferenceKind.INVOKESPECIAL << MemberNameConstants.REFERENCE_KIND_SHIFT;\n            self['java/lang/invoke/MemberName/clazz'] = clazz;\n            self['java/lang/invoke/MemberName/flags'] = flags;\n            self.vmtarget = m.getVMTargetBridgeMethod(thread, refKind);\n            break;\n        case 'Ljava/lang/reflect/Field;':\n            var fieldObj = ref;\n            clazz = fieldObj['java/lang/reflect/Field/clazz'];\n            clazzData = clazz.$cls;\n            f = clazzData.getFieldFromSlot(fieldObj['java/lang/reflect/Field/slot']);\n            flags = f.accessFlags.getRawByte() | MemberNameConstants.IS_FIELD;\n            flags |= (f.accessFlags.isStatic() ? MethodHandleReferenceKind.GETSTATIC : MethodHandleReferenceKind.GETFIELD) << MemberNameConstants.REFERENCE_KIND_SHIFT;\n            self['java/lang/invoke/MemberName/clazz'] = clazz;\n            self['java/lang/invoke/MemberName/flags'] = flags;\n            self.vmindex = clazzData.getVMIndexForField(f);\n            break;\n        default:\n            thread.throwNewException('Ljava/lang/InternalError;', 'init: Invalid target.');\n            break;\n        }\n    };\n    java_lang_invoke_MethodHandleNatives['getConstant(I)I'] = function (thread, arg0) {\n        return 0;\n    };\n    java_lang_invoke_MethodHandleNatives['resolve(Ljava/lang/invoke/MemberName;Ljava/lang/Class;)Ljava/lang/invoke/MemberName;'] = function (thread, memberName, lookupClass) {\n        var type = memberName['java/lang/invoke/MemberName/type'], name = memberName['java/lang/invoke/MemberName/name'].toString(), clazz = memberName['java/lang/invoke/MemberName/clazz'].$cls, flags = memberName['java/lang/invoke/MemberName/flags'], refKind = flags >>> MemberNameConstants.REFERENCE_KIND_SHIFT;\n        if (clazz == null || name == null || type == null) {\n            thread.throwNewException('Ljava/lang/IllegalArgumentException;', 'Invalid MemberName.');\n            return;\n        }\n        ;\n        switch (flags & MemberNameConstants.ALL_KINDS) {\n        case MemberNameConstants.IS_CONSTRUCTOR:\n        case MemberNameConstants.IS_METHOD:\n            var methodTarget = clazz.signaturePolymorphicAwareMethodLookup(name + type.toString());\n            if (methodTarget !== null) {\n                flags |= methodFlags(methodTarget);\n                memberName['java/lang/invoke/MemberName/flags'] = flags;\n                memberName.vmtarget = methodTarget.getVMTargetBridgeMethod(thread, flags >>> MemberNameConstants.REFERENCE_KIND_SHIFT);\n                if (refKind === MethodHandleReferenceKind.INVOKEINTERFACE || refKind === MethodHandleReferenceKind.INVOKEVIRTUAL) {\n                    memberName.vmindex = clazz.getVMIndexForMethod(methodTarget);\n                }\n                return memberName;\n            } else {\n                thread.throwNewException('Ljava/lang/NoSuchMethodError;', 'Invalid method ' + (name + type.toString()) + ' in class ' + clazz.getExternalName() + '.');\n            }\n            break;\n        case MemberNameConstants.IS_FIELD:\n            var fieldTarget = clazz.fieldLookup(name);\n            if (fieldTarget !== null) {\n                flags |= fieldTarget.accessFlags.getRawByte();\n                memberName['java/lang/invoke/MemberName/flags'] = flags;\n                memberName.vmindex = clazz.getVMIndexForField(fieldTarget);\n                return memberName;\n            } else {\n                thread.throwNewException('Ljava/lang/NoSuchFieldError;', 'Invalid method ' + name + ' in class ' + clazz.getExternalName() + '.');\n            }\n            break;\n        default:\n            thread.throwNewException('Ljava/lang/LinkageError;', 'resolve member name');\n            break;\n        }\n    };\n    java_lang_invoke_MethodHandleNatives['objectFieldOffset(Ljava/lang/invoke/MemberName;)J'] = function (thread, memberName) {\n        if (memberName['vmindex'] === -1) {\n            thread.throwNewException('Ljava/lang/IllegalStateException;', 'Attempted to retrieve the object offset for an unresolved or non-object MemberName.');\n        } else {\n            return Long.fromNumber(memberName.vmindex);\n        }\n    };\n    java_lang_invoke_MethodHandleNatives['staticFieldOffset(Ljava/lang/invoke/MemberName;)J'] = function (thread, memberName) {\n        if (memberName['vmindex'] === -1) {\n            thread.throwNewException('Ljava/lang/IllegalStateException;', 'Attempted to retrieve the object offset for an unresolved or non-object MemberName.');\n        } else {\n            return Long.fromNumber(memberName.vmindex);\n        }\n    };\n    java_lang_invoke_MethodHandleNatives['staticFieldBase(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;'] = function (thread, memberName) {\n        var rv = new (thread.getBsCl().getInitializedClass(thread, 'Ljava/lang/Object;').getConstructor(thread))(thread);\n        rv.$staticFieldBase = memberName['java/lang/invoke/MemberName/clazz'].$cls;\n        return rv;\n    };\n    java_lang_invoke_MethodHandleNatives['getMembers(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Class;I[Ljava/lang/invoke/MemberName;)I'] = function (thread, defc, matchName, matchSig, matchFlags, caller, skip, results) {\n        var searchSuperclasses = 0 !== (matchFlags & MemberNameConstants.SEARCH_SUPERCLASSES), searchInterfaces = 0 !== (matchFlags & MemberNameConstants.SEARCH_INTERFACES), matched = 0, targetClass = defc.$cls, methods, fields, matchArray = results.array, name = matchName !== null ? matchName.toString() : null, sig = matchSig !== null ? matchSig.toString() : null;\n        function addMatch(item) {\n            if (skip >= 0) {\n                if (matched < matchArray.length) {\n                    initializeMemberName(thread, matchArray[matched], item);\n                }\n                matched++;\n            } else {\n                skip--;\n            }\n        }\n        ;\n        if (0 !== (matchFlags & MemberNameConstants.IS_CONSTRUCTOR) && (name === null || name === '<init>')) {\n            methods = targetClass.getMethods();\n            methods.forEach(function (m) {\n                if (m.name === '<init>' && (sig === null || sig === m.rawDescriptor)) {\n                    addMatch(m);\n                }\n            });\n        }\n        if (0 !== (matchFlags & MemberNameConstants.IS_METHOD)) {\n            methods = targetClass.getMethods();\n            methods.forEach(function (m) {\n                if (m.name !== '<init>' && (name === null || name === m.name) && (sig === null || sig === m.rawDescriptor)) {\n                    addMatch(m);\n                }\n            });\n        }\n        if (0 !== (matchFlags & MemberNameConstants.IS_FIELD) && sig === null) {\n            fields = targetClass.getFields();\n            fields.forEach(function (f) {\n                if (name === null || name === f.name) {\n                    addMatch(f);\n                }\n            });\n        }\n        ;\n        return matched;\n    };\n    java_lang_invoke_MethodHandleNatives['getNamedCon(I[Ljava/lang/Object;)I'] = function (thread, fieldNum, args) {\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        thread.getBsCl().initializeClass(thread, 'Ljava/lang/invoke/MethodHandleNatives$Constants;', function (constantsCls) {\n            if (constantsCls === null) {\n                return;\n            }\n            var constants = constantsCls.getFields().filter(function (field) {\n                return field.accessFlags.isStatic() && field.accessFlags.isFinal();\n            });\n            if (fieldNum < constants.length) {\n                var field = constants[fieldNum];\n                args.array[0] = util.initString(thread.getBsCl(), field.name);\n                thread.asyncReturn(constantsCls.getConstructor(thread)[field.fullName]);\n            } else {\n                thread.asyncReturn(-1);\n            }\n        });\n    };\n    java_lang_invoke_MethodHandleNatives['getMemberVMInfo(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;'] = function (thread, mname) {\n        var rv = util.newArray(thread, thread.getBsCl(), '[Ljava/lang/Object;', 2), flags = mname['java/lang/invoke/MemberName/flags'], refKind = flags >>> MemberNameConstants.REFERENCE_KIND_SHIFT, longCls = thread.getBsCl().getInitializedClass(thread, 'J');\n        rv.array[0] = longCls.createWrapperObject(thread, Long.fromNumber(mname.vmindex));\n        rv.array[1] = (flags & MemberNameConstants.ALL_KINDS & MemberNameConstants.IS_FIELD) > 0 ? mname['java/lang/invoke/MemberName/clazz'] : mname;\n        return rv;\n    };\n    java_lang_invoke_MethodHandleNatives['setCallSiteTargetNormal(Ljava/lang/invoke/CallSite;Ljava/lang/invoke/MethodHandle;)V'] = function (thread, callSite, methodHandle) {\n        callSite['java/lang/invoke/CallSite/target'] = methodHandle;\n    };\n    return java_lang_invoke_MethodHandleNatives;\n}();\nvar java_lang_invoke_MethodHandle = function () {\n    function java_lang_invoke_MethodHandle() {\n    }\n    java_lang_invoke_MethodHandle['invokeExact([Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, mh, args) {\n        thread.throwNewException('Ljava/lang/UnsupportedOperationException;', 'MethodHandle.invokeExact cannot be invoked reflectively');\n    };\n    java_lang_invoke_MethodHandle['invoke([Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, mh, args) {\n        thread.throwNewException('Ljava/lang/UnsupportedOperationException;', 'MethodHandle.invoke cannot be invoked reflectively');\n    };\n    java_lang_invoke_MethodHandle['invokeBasic([Ljava/lang/Object;)Ljava/lang/Object;'] = function (thread, mh, argsBoxed) {\n        var lmbdaForm = mh['java/lang/invoke/MethodHandle/form'], mn = lmbdaForm['java/lang/invoke/LambdaForm/vmentry'], descriptor, paramTypes;\n        ;\n        ;\n        ;\n        descriptor = mn['java/lang/invoke/MemberName/type'].toString();\n        paramTypes = util.getTypes(descriptor);\n        paramTypes.pop();\n        paramTypes.shift();\n        thread.setStatus(ThreadStatus.ASYNC_WAITING);\n        mn.vmtarget(thread, descriptor, [mh].concat(util.unboxArguments(thread, paramTypes, argsBoxed.array)), function (e, rv) {\n            if (e) {\n                thread.throwException(e);\n            } else {\n                thread.asyncReturn(rv);\n            }\n        });\n    };\n    return java_lang_invoke_MethodHandle;\n}();\nregisterNatives({\n    'java/lang/Class': java_lang_Class,\n    'java/lang/ClassLoader$NativeLibrary': java_lang_ClassLoader$NativeLibrary,\n    'java/lang/ClassLoader': java_lang_ClassLoader,\n    'java/lang/Compiler': java_lang_Compiler,\n    'java/lang/Double': java_lang_Double,\n    'java/lang/Float': java_lang_Float,\n    'java/lang/Object': java_lang_Object,\n    'java/lang/Package': java_lang_Package,\n    'java/lang/ProcessEnvironment': java_lang_ProcessEnvironment,\n    'java/lang/reflect/Array': java_lang_reflect_Array,\n    'java/lang/reflect/Proxy': java_lang_reflect_Proxy,\n    'java/lang/Runtime': java_lang_Runtime,\n    'java/lang/SecurityManager': java_lang_SecurityManager,\n    'java/lang/Shutdown': java_lang_Shutdown,\n    'java/lang/StrictMath': java_lang_StrictMath,\n    'java/lang/String': java_lang_String,\n    'java/lang/System': java_lang_System,\n    'java/lang/Thread': java_lang_Thread,\n    'java/lang/Throwable': java_lang_Throwable,\n    'java/lang/UNIXProcess': java_lang_UNIXProcess,\n    'java/lang/invoke/MethodHandleNatives': java_lang_invoke_MethodHandleNatives,\n    'java/lang/invoke/MethodHandle': java_lang_invoke_MethodHandle\n});\n//# sourceMappingURL=java_lang.js.map"]}